syntax = "proto3";

package api.limit.v1;


option go_package = "block/api/limit/v1;v1";
option java_multiple_files = true;
option java_package = "api.limit.v1";

service Limit {
    rpc CreateLimitOrder (CreateLimitOrderRequest) returns (CreateLimitOrderReply);
    rpc CancelLimitOrder (CancelLimitOrderRequest) returns (CancelLimitOrderReply);
    rpc GetLimitOrder (GetLimitOrderRequest) returns (GetLimitOrderReply);
    rpc GetLimitOrders (GetLimitOrdersRequest) returns (GetLimitOrdersReply);
    rpc GetLimitOrderByBizUserId (GetLimitOrderByBizUserIdRequest) returns (GetLimitOrderByBizUserIdReply);
}

// 通用分页请求
message PageRequest {
    int32 page = 1; // 页码，从1开始
    int32 page_size = 2; // 每页大小
}

// 通用分页响应
message PageResponse {
    int32 page = 1; // 当前页码
    int32 page_size = 2; // 每页大小
    int64 total = 3; // 总记录数
    int32 total_pages = 4; // 总页数
}

enum AmountType {
    AMOUNT_TYPE_AMOUNT = 0; // 数量
    AMOUNT_TYPE_PERCENT = 1; // 百分比
}

enum StopLossProfitType {
    STOP_LOSS_PROFIT_TYPE_TAKE_PROFIT = 0; // 止盈
    STOP_LOSS_PROFIT_TYPE_STOP_LOSS = 1; // 止损
}

// 限价买入订单 - 按价格买入XXX数量的主网币
message LimitOrderBuy {
    double target_price = 1; // 目标价格
    double amount = 2; // 购买数量(主网币数量)
    optional double take_profit_percent = 3; // 止盈百分比
    optional double stop_loss_percent = 4; // 止损百分比
    optional string take_profit_order_id = 5; // 止盈订单ID
    optional string stop_loss_order_id = 6; // 止损订单ID
}

// 限价卖出订单
message LimitOrderSell {
    double target_price = 1; // 目标价格
    AmountType amount_type = 2; // 数量类型
    double amount_value = 3; // 数量值(根据amount_type决定是具体数量还是百分比)
}

// 止盈止损订单
message LimitOrderStopLossProfit {
    StopLossProfitType type = 1; // 止盈或止损
    double percent = 2; // 百分比
    double token_value_usdt = 3; // 下单时候的代币价值(USDT)
}

message CreateLimitOrderRequest {
    string chain = 1; // 链
    string user_address = 2; // 用户地址
    string token_address = 3; // 代币地址
    string private_key = 4; // 私钥
    double slippage = 5; // 滑点
    string biz_id = 6; // 业务ID
    string biz_user_id = 7; // 业务用户ID
    double gas_price = 8; // gas 价格
    uint64 expire_at = 9; // 过期时间

    // 根据limit_type选择对应的订单数据
    oneof order_data {
        LimitOrderBuy limit_buy = 10; // 限价买入订单
        LimitOrderSell limit_sell = 11; // 限价卖出订单
        LimitOrderStopLossProfit stop_loss_profit = 12; // 止盈止损订单
    }
}

message CreateLimitOrderReply {
    string order_id = 1; // 订单ID
}

message CancelLimitOrderRequest {
    string order_id = 1; // 订单ID
}

message CancelLimitOrderReply {
}


message GetLimitOrderRequest {
    string biz_id = 1; // 业务ID
}

message LimitOrder {
    string id = 1; // 订单ID
    string created_at = 2; // 创建时间
    string updated_at = 3; // 修改时间
    string deleted_at = 4; // 删除时间
    uint64 expire_at = 5; // 过期时间
    string chain = 6; // 链
    string user_address = 7; // 用户地址
    string token_address = 8; // 代币地址
    string private_key = 9; // 私钥
    double slippage = 10; // 滑点
    string biz_id = 11; // 业务ID
    string biz_user_id = 12; // 业务用户ID
    double gas_price = 13; // gas 价格
    int32 status = 14; // 状态
    string result = 15; // 结果

    // 根据limit_type选择对应的订单数据
    oneof order_data {
        LimitOrderBuy limit_buy = 16; // 限价买入订单
        LimitOrderSell limit_sell = 17; // 限价卖出订单
        LimitOrderStopLossProfit stop_loss_profit = 18; // 止盈止损订单
    }
}

message GetLimitOrderReply {
     LimitOrder limit_orders = 1; // 订单列表
}

message GetLimitOrdersRequest {
   repeated string biz_ids = 1; // 业务ID
}

message GetLimitOrdersReply {
    repeated LimitOrder limit_orders = 1; // 订单列表
}

message GetLimitOrderByBizUserIdRequest {
    string biz_user_id = 1; // 业务用户ID
    PageRequest page = 2; // 分页参数
}

message GetLimitOrderByBizUserIdReply {
    repeated LimitOrder limit_orders = 1; // 订单列表
    PageResponse page = 2; // 分页信息
}