syntax = "proto3";

package trade_service;

option go_package = "reef_sub_service_sol/api/trade_service/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.trade_service.v1";
option java_outer_classname = "TradeServiceProtoV1";

// 支持的区块链类型
enum Chain {
  SOL = 0;  // Solana
  BSC = 1;  // Binance Smart Chain
}

// 交易服务
service TradeService {
  // 订阅交易流（支持动态切换代币地址和链类型）
  rpc SubscribeTrade(stream SubscribeTradeRequest) returns (stream TradeResponse);
  // 订阅最新交易流（所有代币）
  rpc SubscribeLatestTrade(SubscribeLatestTradeRequest) returns (stream TradeResponse);
}

// 订阅交易请求
message SubscribeTradeRequest {
  // 代币地址（SOL为mint地址，BSC为合约地址）
  string token_address = 1;
  // 区块链类型
  Chain chain = 2;
}

// 订阅最新交易请求
message SubscribeLatestTradeRequest {
  // 区块链类型
  Chain chain = 1;
}

// 交易响应
message TradeResponse {
  // 交易签名/哈希
  string signature = 1;
  // 用户地址
  string user_address = 2;
  // 输入代币地址
  string input_address = 3;
  // 输出代币地址
  string output_address = 4;
  // 输入数量
  string input_amount = 5;  // 使用string避免精度问题
  // 输出数量
  string output_amount = 6;  // 使用string避免精度问题
  // 交易类型 (买入/卖出)
  string trade_type = 7;
  // 时间戳
  int64 timestamp = 8;
  // 池地址
  string pool_address = 9;
  // 区块链类型
  Chain chain = 10;
}