// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: sub/v1/reef_sub_service_bsc.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 订阅交易请求
type SubscribeTradeRequestBsc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MintAddress   string                 `protobuf:"bytes,1,opt,name=mint_address,json=mintAddress,proto3" json:"mint_address,omitempty"` // 要订阅的代币地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeTradeRequestBsc) Reset() {
	*x = SubscribeTradeRequestBsc{}
	mi := &file_sub_v1_reef_sub_service_bsc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTradeRequestBsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTradeRequestBsc) ProtoMessage() {}

func (x *SubscribeTradeRequestBsc) ProtoReflect() protoreflect.Message {
	mi := &file_sub_v1_reef_sub_service_bsc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTradeRequestBsc.ProtoReflect.Descriptor instead.
func (*SubscribeTradeRequestBsc) Descriptor() ([]byte, []int) {
	return file_sub_v1_reef_sub_service_bsc_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeTradeRequestBsc) GetMintAddress() string {
	if x != nil {
		return x.MintAddress
	}
	return ""
}

// 交易事件
type TradeEventBsc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     string                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`                           // 交易hash
	UserAddress   string                 `protobuf:"bytes,2,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`    // 用户地址
	InputMint     string                 `protobuf:"bytes,3,opt,name=input_mint,json=inputMint,proto3" json:"input_mint,omitempty"`          // 输入代币地址
	OutputMint    string                 `protobuf:"bytes,4,opt,name=output_mint,json=outputMint,proto3" json:"output_mint,omitempty"`       // 输出代币地址
	InputAmount   string                 `protobuf:"bytes,5,opt,name=input_amount,json=inputAmount,proto3" json:"input_amount,omitempty"`    // 输入数量
	OutputAmount  string                 `protobuf:"bytes,6,opt,name=output_amount,json=outputAmount,proto3" json:"output_amount,omitempty"` // 输出数量
	TradeType     string                 `protobuf:"bytes,7,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`          // 交易类型：买入/卖出
	Timestamp     int64                  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                          // 时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeEventBsc) Reset() {
	*x = TradeEventBsc{}
	mi := &file_sub_v1_reef_sub_service_bsc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeEventBsc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeEventBsc) ProtoMessage() {}

func (x *TradeEventBsc) ProtoReflect() protoreflect.Message {
	mi := &file_sub_v1_reef_sub_service_bsc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeEventBsc.ProtoReflect.Descriptor instead.
func (*TradeEventBsc) Descriptor() ([]byte, []int) {
	return file_sub_v1_reef_sub_service_bsc_proto_rawDescGZIP(), []int{1}
}

func (x *TradeEventBsc) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *TradeEventBsc) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *TradeEventBsc) GetInputMint() string {
	if x != nil {
		return x.InputMint
	}
	return ""
}

func (x *TradeEventBsc) GetOutputMint() string {
	if x != nil {
		return x.OutputMint
	}
	return ""
}

func (x *TradeEventBsc) GetInputAmount() string {
	if x != nil {
		return x.InputAmount
	}
	return ""
}

func (x *TradeEventBsc) GetOutputAmount() string {
	if x != nil {
		return x.OutputAmount
	}
	return ""
}

func (x *TradeEventBsc) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *TradeEventBsc) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_sub_v1_reef_sub_service_bsc_proto protoreflect.FileDescriptor

var file_sub_v1_reef_sub_service_bsc_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x73, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x65, 0x66, 0x5f, 0x73, 0x75,
	0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x73, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x3d, 0x0a,
	0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x95, 0x02, 0x0a,
	0x0d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x73, 0x63, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x32, 0x67, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x42, 0x73, 0x63, 0x12, 0x54, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x42, 0x73, 0x63, 0x12, 0x22, 0x2e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x73, 0x63,
	0x1a, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x73, 0x63, 0x28, 0x01, 0x30, 0x01, 0x42, 0x4f, 0x0a,
	0x17, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x24, 0x72, 0x65, 0x65, 0x66, 0x5f, 0x73,
	0x75, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x73, 0x63, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_sub_v1_reef_sub_service_bsc_proto_rawDescOnce sync.Once
	file_sub_v1_reef_sub_service_bsc_proto_rawDescData []byte
)

func file_sub_v1_reef_sub_service_bsc_proto_rawDescGZIP() []byte {
	file_sub_v1_reef_sub_service_bsc_proto_rawDescOnce.Do(func() {
		file_sub_v1_reef_sub_service_bsc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sub_v1_reef_sub_service_bsc_proto_rawDesc), len(file_sub_v1_reef_sub_service_bsc_proto_rawDesc)))
	})
	return file_sub_v1_reef_sub_service_bsc_proto_rawDescData
}

var file_sub_v1_reef_sub_service_bsc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sub_v1_reef_sub_service_bsc_proto_goTypes = []any{
	(*SubscribeTradeRequestBsc)(nil), // 0: trade.v1.SubscribeTradeRequestBsc
	(*TradeEventBsc)(nil),            // 1: trade.v1.TradeEventBsc
}
var file_sub_v1_reef_sub_service_bsc_proto_depIdxs = []int32{
	0, // 0: trade.v1.TradeServiceBsc.SubscribeTradeBsc:input_type -> trade.v1.SubscribeTradeRequestBsc
	1, // 1: trade.v1.TradeServiceBsc.SubscribeTradeBsc:output_type -> trade.v1.TradeEventBsc
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sub_v1_reef_sub_service_bsc_proto_init() }
func file_sub_v1_reef_sub_service_bsc_proto_init() {
	if File_sub_v1_reef_sub_service_bsc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sub_v1_reef_sub_service_bsc_proto_rawDesc), len(file_sub_v1_reef_sub_service_bsc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sub_v1_reef_sub_service_bsc_proto_goTypes,
		DependencyIndexes: file_sub_v1_reef_sub_service_bsc_proto_depIdxs,
		MessageInfos:      file_sub_v1_reef_sub_service_bsc_proto_msgTypes,
	}.Build()
	File_sub_v1_reef_sub_service_bsc_proto = out.File
	file_sub_v1_reef_sub_service_bsc_proto_goTypes = nil
	file_sub_v1_reef_sub_service_bsc_proto_depIdxs = nil
}
