// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: block/v1/block.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionStatus int32

const (
	TransactionStatus_TRANSACTION_STATUS_PENDING   TransactionStatus = 0 // 待处理
	TransactionStatus_TRANSACTION_STATUS_SUCCESS   TransactionStatus = 1 // 成功
	TransactionStatus_TRANSACTION_STATUS_FAILED    TransactionStatus = 2 // 失败
	TransactionStatus_TRANSACTION_STATUS_NOT_FOUND TransactionStatus = 3 // 未找到
)

// Enum value maps for TransactionStatus.
var (
	TransactionStatus_name = map[int32]string{
		0: "TRANSACTION_STATUS_PENDING",
		1: "TRANSACTION_STATUS_SUCCESS",
		2: "TRANSACTION_STATUS_FAILED",
		3: "TRANSACTION_STATUS_NOT_FOUND",
	}
	TransactionStatus_value = map[string]int32{
		"TRANSACTION_STATUS_PENDING":   0,
		"TRANSACTION_STATUS_SUCCESS":   1,
		"TRANSACTION_STATUS_FAILED":    2,
		"TRANSACTION_STATUS_NOT_FOUND": 3,
	}
)

func (x TransactionStatus) Enum() *TransactionStatus {
	p := new(TransactionStatus)
	*p = x
	return p
}

func (x TransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_block_v1_block_proto_enumTypes[0].Descriptor()
}

func (TransactionStatus) Type() protoreflect.EnumType {
	return &file_block_v1_block_proto_enumTypes[0]
}

func (x TransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionStatus.Descriptor instead.
func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{0}
}

type NetworkConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`     //配置键
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` //配置值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfigItem) Reset() {
	*x = NetworkConfigItem{}
	mi := &file_block_v1_block_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfigItem) ProtoMessage() {}

func (x *NetworkConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfigItem.ProtoReflect.Descriptor instead.
func (*NetworkConfigItem) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkConfigItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *NetworkConfigItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type NetworkItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`       //网络名称
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`   //网络符号
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`      //网络类型
	Configs       []*NetworkConfigItem   `protobuf:"bytes,5,rep,name=configs,proto3" json:"configs,omitempty"` //网络配置列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkItem) Reset() {
	*x = NetworkItem{}
	mi := &file_block_v1_block_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkItem) ProtoMessage() {}

func (x *NetworkItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkItem.ProtoReflect.Descriptor instead.
func (*NetworkItem) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NetworkItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NetworkItem) GetConfigs() []*NetworkConfigItem {
	if x != nil {
		return x.Configs
	}
	return nil
}

type MetadataItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         //链名称
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`     //链符号
	Networks      []*NetworkItem         `protobuf:"bytes,3,rep,name=networks,proto3" json:"networks,omitempty"` //网络列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetadataItem) Reset() {
	*x = MetadataItem{}
	mi := &file_block_v1_block_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataItem) ProtoMessage() {}

func (x *MetadataItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataItem.ProtoReflect.Descriptor instead.
func (*MetadataItem) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{2}
}

func (x *MetadataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MetadataItem) GetNetworks() []*NetworkItem {
	if x != nil {
		return x.Networks
	}
	return nil
}

type GetTokenBalanceRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Address         string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                                        // 地址
	Chain           string                 `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	ContractAddress string                 `protobuf:"bytes,4,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"` // 合约地址
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTokenBalanceRequest) Reset() {
	*x = GetTokenBalanceRequest{}
	mi := &file_block_v1_block_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenBalanceRequest) ProtoMessage() {}

func (x *GetTokenBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetTokenBalanceRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{3}
}

func (x *GetTokenBalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetTokenBalanceRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTokenBalanceRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTokenBalanceRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type GetTokenBalanceReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Balance         string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`                                          // 代币余额
	Decimals        uint32                 `protobuf:"varint,2,opt,name=decimals,proto3" json:"decimals,omitempty"`                                       // 代币小数位
	ParseBalance    string                 `protobuf:"bytes,3,opt,name=parse_balance,json=parseBalance,proto3" json:"parse_balance,omitempty"`            // 解析后的余额
	ParseUsdBalance string                 `protobuf:"bytes,4,opt,name=parse_usd_balance,json=parseUsdBalance,proto3" json:"parse_usd_balance,omitempty"` // 解析后的美元余额
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTokenBalanceReply) Reset() {
	*x = GetTokenBalanceReply{}
	mi := &file_block_v1_block_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenBalanceReply) ProtoMessage() {}

func (x *GetTokenBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenBalanceReply.ProtoReflect.Descriptor instead.
func (*GetTokenBalanceReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{4}
}

func (x *GetTokenBalanceReply) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *GetTokenBalanceReply) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *GetTokenBalanceReply) GetParseBalance() string {
	if x != nil {
		return x.ParseBalance
	}
	return ""
}

func (x *GetTokenBalanceReply) GetParseUsdBalance() string {
	if x != nil {
		return x.ParseUsdBalance
	}
	return ""
}

type GetTokenBalanceBatchRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	BalanceItems  []*GetTokenBalanceRequest `protobuf:"bytes,1,rep,name=balance_items,json=balanceItems,proto3" json:"balance_items,omitempty"` // 批量请求
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenBalanceBatchRequest) Reset() {
	*x = GetTokenBalanceBatchRequest{}
	mi := &file_block_v1_block_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenBalanceBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenBalanceBatchRequest) ProtoMessage() {}

func (x *GetTokenBalanceBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenBalanceBatchRequest.ProtoReflect.Descriptor instead.
func (*GetTokenBalanceBatchRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{5}
}

func (x *GetTokenBalanceBatchRequest) GetBalanceItems() []*GetTokenBalanceRequest {
	if x != nil {
		return x.BalanceItems
	}
	return nil
}

type GetTokenBalanceBatchReply struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	BalanceResult map[string]*GetTokenBalanceReply `protobuf:"bytes,1,rep,name=balance_result,json=balanceResult,proto3" json:"balance_result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 地址到余额信息的映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenBalanceBatchReply) Reset() {
	*x = GetTokenBalanceBatchReply{}
	mi := &file_block_v1_block_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenBalanceBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenBalanceBatchReply) ProtoMessage() {}

func (x *GetTokenBalanceBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenBalanceBatchReply.ProtoReflect.Descriptor instead.
func (*GetTokenBalanceBatchReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{6}
}

func (x *GetTokenBalanceBatchReply) GetBalanceResult() map[string]*GetTokenBalanceReply {
	if x != nil {
		return x.BalanceResult
	}
	return nil
}

type GetTokenInfoRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ContractAddress string                 `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"` // 合约地址
	Chain           string                 `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTokenInfoRequest) Reset() {
	*x = GetTokenInfoRequest{}
	mi := &file_block_v1_block_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoRequest) ProtoMessage() {}

func (x *GetTokenInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTokenInfoRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{7}
}

func (x *GetTokenInfoRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetTokenInfoRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTokenInfoRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type GetTokenInfoReply struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TokenName             string                 `protobuf:"bytes,1,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`                                         // 代币名称
	TokenSymbol           string                 `protobuf:"bytes,2,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`                                   // 代币符号
	TokenDecimals         uint32                 `protobuf:"varint,3,opt,name=token_decimals,json=tokenDecimals,proto3" json:"token_decimals,omitempty"`                            // 代币小数位
	TokenTotalSupply      string                 `protobuf:"bytes,4,opt,name=token_total_supply,json=tokenTotalSupply,proto3" json:"token_total_supply,omitempty"`                  // 代币总供应量
	ParseTokenTotalSupply string                 `protobuf:"bytes,5,opt,name=parse_token_total_supply,json=parseTokenTotalSupply,proto3" json:"parse_token_total_supply,omitempty"` // 解析后的代币总供应量
	UpdateAuthority       string                 `protobuf:"bytes,6,opt,name=update_authority,json=updateAuthority,proto3" json:"update_authority,omitempty"`                       // 更新权限
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetTokenInfoReply) Reset() {
	*x = GetTokenInfoReply{}
	mi := &file_block_v1_block_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoReply) ProtoMessage() {}

func (x *GetTokenInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoReply.ProtoReflect.Descriptor instead.
func (*GetTokenInfoReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{8}
}

func (x *GetTokenInfoReply) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *GetTokenInfoReply) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *GetTokenInfoReply) GetTokenDecimals() uint32 {
	if x != nil {
		return x.TokenDecimals
	}
	return 0
}

func (x *GetTokenInfoReply) GetTokenTotalSupply() string {
	if x != nil {
		return x.TokenTotalSupply
	}
	return ""
}

func (x *GetTokenInfoReply) GetParseTokenTotalSupply() string {
	if x != nil {
		return x.ParseTokenTotalSupply
	}
	return ""
}

func (x *GetTokenInfoReply) GetUpdateAuthority() string {
	if x != nil {
		return x.UpdateAuthority
	}
	return ""
}

type GetTokenInfoBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InfoItems     []*GetTokenInfoRequest `protobuf:"bytes,1,rep,name=info_items,json=infoItems,proto3" json:"info_items,omitempty"` // 批量请求
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenInfoBatchRequest) Reset() {
	*x = GetTokenInfoBatchRequest{}
	mi := &file_block_v1_block_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenInfoBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoBatchRequest) ProtoMessage() {}

func (x *GetTokenInfoBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoBatchRequest.ProtoReflect.Descriptor instead.
func (*GetTokenInfoBatchRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{9}
}

func (x *GetTokenInfoBatchRequest) GetInfoItems() []*GetTokenInfoRequest {
	if x != nil {
		return x.InfoItems
	}
	return nil
}

type GetTokenInfoBatchReply struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	InfoResult    map[string]*GetTokenInfoReply `protobuf:"bytes,1,rep,name=info_result,json=infoResult,proto3" json:"info_result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 合约地址到代币信息的映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenInfoBatchReply) Reset() {
	*x = GetTokenInfoBatchReply{}
	mi := &file_block_v1_block_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenInfoBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoBatchReply) ProtoMessage() {}

func (x *GetTokenInfoBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoBatchReply.ProtoReflect.Descriptor instead.
func (*GetTokenInfoBatchReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{10}
}

func (x *GetTokenInfoBatchReply) GetInfoResult() map[string]*GetTokenInfoReply {
	if x != nil {
		return x.InfoResult
	}
	return nil
}

type SendTransactionRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Chain             string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                                  // 链名称
	Network           string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                              // 网络名称
	SignedTransaction []string               `protobuf:"bytes,3,rep,name=signed_transaction,json=signedTransaction,proto3" json:"signed_transaction,omitempty"` // 交易，字符串
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SendTransactionRequest) Reset() {
	*x = SendTransactionRequest{}
	mi := &file_block_v1_block_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionRequest) ProtoMessage() {}

func (x *SendTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{11}
}

func (x *SendTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SendTransactionRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *SendTransactionRequest) GetSignedTransaction() []string {
	if x != nil {
		return x.SignedTransaction
	}
	return nil
}

type SendTransactionReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionHash []string               `protobuf:"bytes,1,rep,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"` // 交易哈希 如果成功则有hash，且msg返回success
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SendTransactionReply) Reset() {
	*x = SendTransactionReply{}
	mi := &file_block_v1_block_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionReply) ProtoMessage() {}

func (x *SendTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionReply.ProtoReflect.Descriptor instead.
func (*SendTransactionReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{12}
}

func (x *SendTransactionReply) GetTransactionHash() []string {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

type GetTransactionStatusRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	TransactionHash string                 `protobuf:"bytes,3,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"` // 交易哈希
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTransactionStatusRequest) Reset() {
	*x = GetTransactionStatusRequest{}
	mi := &file_block_v1_block_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionStatusRequest) ProtoMessage() {}

func (x *GetTransactionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{13}
}

func (x *GetTransactionStatusRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTransactionStatusRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTransactionStatusRequest) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

type GetTransactionStatusReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // 错误信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionStatusReply) Reset() {
	*x = GetTransactionStatusReply{}
	mi := &file_block_v1_block_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionStatusReply) ProtoMessage() {}

func (x *GetTransactionStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionStatusReply.ProtoReflect.Descriptor instead.
func (*GetTransactionStatusReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{14}
}

func (x *GetTransactionStatusReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTransactionStatusReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetExplorerURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                    // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                // 网络名称
	UrlType       string                 `protobuf:"bytes,3,opt,name=url_type,json=urlType,proto3" json:"url_type,omitempty"` //URL类型
	Data          string                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                      // 数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExplorerURLRequest) Reset() {
	*x = GetExplorerURLRequest{}
	mi := &file_block_v1_block_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExplorerURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExplorerURLRequest) ProtoMessage() {}

func (x *GetExplorerURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExplorerURLRequest.ProtoReflect.Descriptor instead.
func (*GetExplorerURLRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{15}
}

func (x *GetExplorerURLRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetExplorerURLRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetExplorerURLRequest) GetUrlType() string {
	if x != nil {
		return x.UrlType
	}
	return ""
}

func (x *GetExplorerURLRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetExplorerURLReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // 浏览器URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExplorerURLReply) Reset() {
	*x = GetExplorerURLReply{}
	mi := &file_block_v1_block_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExplorerURLReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExplorerURLReply) ProtoMessage() {}

func (x *GetExplorerURLReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExplorerURLReply.ProtoReflect.Descriptor instead.
func (*GetExplorerURLReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{16}
}

func (x *GetExplorerURLReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ValidateAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // 地址
	Chain         string                 `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Network       string                 `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"` // 网络名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAddressRequest) Reset() {
	*x = ValidateAddressRequest{}
	mi := &file_block_v1_block_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAddressRequest) ProtoMessage() {}

func (x *ValidateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAddressRequest.ProtoReflect.Descriptor instead.
func (*ValidateAddressRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{17}
}

func (x *ValidateAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ValidateAddressRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *ValidateAddressRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type ValidateAddressReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"` // 是否有效
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAddressReply) Reset() {
	*x = ValidateAddressReply{}
	mi := &file_block_v1_block_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAddressReply) ProtoMessage() {}

func (x *ValidateAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAddressReply.ProtoReflect.Descriptor instead.
func (*ValidateAddressReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{18}
}

func (x *ValidateAddressReply) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type SubscribeTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // 网络名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeTransactionRequest) Reset() {
	*x = SubscribeTransactionRequest{}
	mi := &file_block_v1_block_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransactionRequest) ProtoMessage() {}

func (x *SubscribeTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransactionRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTransactionRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{19}
}

func (x *SubscribeTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SubscribeTransactionRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type SubscribeTransactionReply struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Transactions  []*SubscribeTransactionItem `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"` // 交易列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeTransactionReply) Reset() {
	*x = SubscribeTransactionReply{}
	mi := &file_block_v1_block_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransactionReply) ProtoMessage() {}

func (x *SubscribeTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransactionReply.ProtoReflect.Descriptor instead.
func (*SubscribeTransactionReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeTransactionReply) GetTransactions() []*SubscribeTransactionItem {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type SubscribeTransactionItem struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BlockNumber     *int64                 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3,oneof" json:"block_number,omitempty"`             // 区块号
	BlockTime       *int64                 `protobuf:"varint,2,opt,name=block_time,json=blockTime,proto3,oneof" json:"block_time,omitempty"`                   // 区块时间
	FromAddress     *string                `protobuf:"bytes,3,opt,name=from_address,json=fromAddress,proto3,oneof" json:"from_address,omitempty"`              // 发起地址
	ToAddress       *string                `protobuf:"bytes,4,opt,name=to_address,json=toAddress,proto3,oneof" json:"to_address,omitempty"`                    // 接收地址
	Value           *string                `protobuf:"bytes,5,opt,name=value,proto3,oneof" json:"value,omitempty"`                                             // 金额
	Hash            *string                `protobuf:"bytes,6,opt,name=hash,proto3,oneof" json:"hash,omitempty"`                                               // 交易哈希
	Symbol          *string                `protobuf:"bytes,7,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`                                           // 代币符号
	Status          *bool                  `protobuf:"varint,8,opt,name=status,proto3,oneof" json:"status,omitempty"`                                          // 交易状态
	Chain           *string                `protobuf:"bytes,9,opt,name=chain,proto3,oneof" json:"chain,omitempty"`                                             // 链名称
	Network         *string                `protobuf:"bytes,10,opt,name=network,proto3,oneof" json:"network,omitempty"`                                        // 网络名称
	ContractAddress *string                `protobuf:"bytes,11,opt,name=contract_address,json=contractAddress,proto3,oneof" json:"contract_address,omitempty"` // 合约地址
	IsNative        *bool                  `protobuf:"varint,12,opt,name=is_native,json=isNative,proto3,oneof" json:"is_native,omitempty"`                     // 是否为原生代币
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubscribeTransactionItem) Reset() {
	*x = SubscribeTransactionItem{}
	mi := &file_block_v1_block_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransactionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransactionItem) ProtoMessage() {}

func (x *SubscribeTransactionItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransactionItem.ProtoReflect.Descriptor instead.
func (*SubscribeTransactionItem) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{21}
}

func (x *SubscribeTransactionItem) GetBlockNumber() int64 {
	if x != nil && x.BlockNumber != nil {
		return *x.BlockNumber
	}
	return 0
}

func (x *SubscribeTransactionItem) GetBlockTime() int64 {
	if x != nil && x.BlockTime != nil {
		return *x.BlockTime
	}
	return 0
}

func (x *SubscribeTransactionItem) GetFromAddress() string {
	if x != nil && x.FromAddress != nil {
		return *x.FromAddress
	}
	return ""
}

func (x *SubscribeTransactionItem) GetToAddress() string {
	if x != nil && x.ToAddress != nil {
		return *x.ToAddress
	}
	return ""
}

func (x *SubscribeTransactionItem) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *SubscribeTransactionItem) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *SubscribeTransactionItem) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *SubscribeTransactionItem) GetStatus() bool {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return false
}

func (x *SubscribeTransactionItem) GetChain() string {
	if x != nil && x.Chain != nil {
		return *x.Chain
	}
	return ""
}

func (x *SubscribeTransactionItem) GetNetwork() string {
	if x != nil && x.Network != nil {
		return *x.Network
	}
	return ""
}

func (x *SubscribeTransactionItem) GetContractAddress() string {
	if x != nil && x.ContractAddress != nil {
		return *x.ContractAddress
	}
	return ""
}

func (x *SubscribeTransactionItem) GetIsNative() bool {
	if x != nil && x.IsNative != nil {
		return *x.IsNative
	}
	return false
}

type GetTokenPriceRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	ContractAddress string                 `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"` // 合约地址
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTokenPriceRequest) Reset() {
	*x = GetTokenPriceRequest{}
	mi := &file_block_v1_block_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPriceRequest) ProtoMessage() {}

func (x *GetTokenPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPriceRequest.ProtoReflect.Descriptor instead.
func (*GetTokenPriceRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{22}
}

func (x *GetTokenPriceRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTokenPriceRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTokenPriceRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type GetTokenPriceReply struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	NativeTokenPrice      string                 `protobuf:"bytes,1,opt,name=native_token_price,json=nativeTokenPrice,proto3" json:"native_token_price,omitempty"`                  // 原生币价格
	NativeTokenDecimals   uint32                 `protobuf:"varint,2,opt,name=native_token_decimals,json=nativeTokenDecimals,proto3" json:"native_token_decimals,omitempty"`        // 原生币精度
	NativeTokenParsePrice string                 `protobuf:"bytes,3,opt,name=native_token_parse_price,json=nativeTokenParsePrice,proto3" json:"native_token_parse_price,omitempty"` // 原生币解析价格
	UsdTokenPrice         string                 `protobuf:"bytes,4,opt,name=usd_token_price,json=usdTokenPrice,proto3" json:"usd_token_price,omitempty"`                           // 美元价格
	UsdTokenDecimals      uint32                 `protobuf:"varint,5,opt,name=usd_token_decimals,json=usdTokenDecimals,proto3" json:"usd_token_decimals,omitempty"`                 // 美元精度
	UsdTokenParsePrice    string                 `protobuf:"bytes,6,opt,name=usd_token_parse_price,json=usdTokenParsePrice,proto3" json:"usd_token_parse_price,omitempty"`          // 美元解析价格
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetTokenPriceReply) Reset() {
	*x = GetTokenPriceReply{}
	mi := &file_block_v1_block_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPriceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPriceReply) ProtoMessage() {}

func (x *GetTokenPriceReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPriceReply.ProtoReflect.Descriptor instead.
func (*GetTokenPriceReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{23}
}

func (x *GetTokenPriceReply) GetNativeTokenPrice() string {
	if x != nil {
		return x.NativeTokenPrice
	}
	return ""
}

func (x *GetTokenPriceReply) GetNativeTokenDecimals() uint32 {
	if x != nil {
		return x.NativeTokenDecimals
	}
	return 0
}

func (x *GetTokenPriceReply) GetNativeTokenParsePrice() string {
	if x != nil {
		return x.NativeTokenParsePrice
	}
	return ""
}

func (x *GetTokenPriceReply) GetUsdTokenPrice() string {
	if x != nil {
		return x.UsdTokenPrice
	}
	return ""
}

func (x *GetTokenPriceReply) GetUsdTokenDecimals() uint32 {
	if x != nil {
		return x.UsdTokenDecimals
	}
	return 0
}

func (x *GetTokenPriceReply) GetUsdTokenParsePrice() string {
	if x != nil {
		return x.UsdTokenParsePrice
	}
	return ""
}

type GetTokenPriceBatchRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	PriceItems    []*GetTokenPriceRequest `protobuf:"bytes,1,rep,name=price_items,json=priceItems,proto3" json:"price_items,omitempty"` // 批量请求
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenPriceBatchRequest) Reset() {
	*x = GetTokenPriceBatchRequest{}
	mi := &file_block_v1_block_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPriceBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPriceBatchRequest) ProtoMessage() {}

func (x *GetTokenPriceBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPriceBatchRequest.ProtoReflect.Descriptor instead.
func (*GetTokenPriceBatchRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{24}
}

func (x *GetTokenPriceBatchRequest) GetPriceItems() []*GetTokenPriceRequest {
	if x != nil {
		return x.PriceItems
	}
	return nil
}

type GetTokenPriceBatchReply struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	PriceResult   map[string]*GetTokenPriceReply `protobuf:"bytes,1,rep,name=price_result,json=priceResult,proto3" json:"price_result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 合约地址到价格信息的映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenPriceBatchReply) Reset() {
	*x = GetTokenPriceBatchReply{}
	mi := &file_block_v1_block_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPriceBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPriceBatchReply) ProtoMessage() {}

func (x *GetTokenPriceBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPriceBatchReply.ProtoReflect.Descriptor instead.
func (*GetTokenPriceBatchReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{25}
}

func (x *GetTokenPriceBatchReply) GetPriceResult() map[string]*GetTokenPriceReply {
	if x != nil {
		return x.PriceResult
	}
	return nil
}

type SwapRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Chain            string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                                 // 链名称
	Network          string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                             // 网络名称
	UserAddress      string                 `protobuf:"bytes,3,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`                  // 用户地址
	FromTokenAddress string                 `protobuf:"bytes,4,opt,name=from_token_address,json=fromTokenAddress,proto3" json:"from_token_address,omitempty"` // 发送代币地址
	ToTokenAddress   string                 `protobuf:"bytes,5,opt,name=to_token_address,json=toTokenAddress,proto3" json:"to_token_address,omitempty"`       // 接收代币地址
	Amount           string                 `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`                                               // 金额
	Slippage         float64                `protobuf:"fixed64,7,opt,name=slippage,proto3" json:"slippage,omitempty"`                                         // 滑点
	BeforeFee        *SwapFeeItem           `protobuf:"bytes,8,opt,name=before_fee,json=beforeFee,proto3,oneof" json:"before_fee,omitempty"`                  // from token 前置手续费
	AfterFee         *SwapFeeItem           `protobuf:"bytes,9,opt,name=after_fee,json=afterFee,proto3,oneof" json:"after_fee,omitempty"`                     // to token 后置手续费
	Nonce            *uint64                `protobuf:"varint,10,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`                                         // 第一笔Nonce
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SwapRequest) Reset() {
	*x = SwapRequest{}
	mi := &file_block_v1_block_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRequest) ProtoMessage() {}

func (x *SwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRequest.ProtoReflect.Descriptor instead.
func (*SwapRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{26}
}

func (x *SwapRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SwapRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *SwapRequest) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *SwapRequest) GetFromTokenAddress() string {
	if x != nil {
		return x.FromTokenAddress
	}
	return ""
}

func (x *SwapRequest) GetToTokenAddress() string {
	if x != nil {
		return x.ToTokenAddress
	}
	return ""
}

func (x *SwapRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SwapRequest) GetSlippage() float64 {
	if x != nil {
		return x.Slippage
	}
	return 0
}

func (x *SwapRequest) GetBeforeFee() *SwapFeeItem {
	if x != nil {
		return x.BeforeFee
	}
	return nil
}

func (x *SwapRequest) GetAfterFee() *SwapFeeItem {
	if x != nil {
		return x.AfterFee
	}
	return nil
}

func (x *SwapRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

type QuoteRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	Direction       uint32                 `protobuf:"varint,3,opt,name=direction,proto3" json:"direction,omitempty"`                                   // 方向 1: 买入 2: 卖出
	ContractAddress string                 `protobuf:"bytes,4,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"` // 合约地址
	Amount          string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`                                          // 金额
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QuoteRequest) Reset() {
	*x = QuoteRequest{}
	mi := &file_block_v1_block_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteRequest) ProtoMessage() {}

func (x *QuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteRequest.ProtoReflect.Descriptor instead.
func (*QuoteRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{27}
}

func (x *QuoteRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *QuoteRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *QuoteRequest) GetDirection() uint32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *QuoteRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *QuoteRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type QuoteReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OutAmount     string                 `protobuf:"bytes,1,opt,name=out_amount,json=outAmount,proto3" json:"out_amount,omitempty"` // 输出金额
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuoteReply) Reset() {
	*x = QuoteReply{}
	mi := &file_block_v1_block_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteReply) ProtoMessage() {}

func (x *QuoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteReply.ProtoReflect.Descriptor instead.
func (*QuoteReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{28}
}

func (x *QuoteReply) GetOutAmount() string {
	if x != nil {
		return x.OutAmount
	}
	return ""
}

type SwapFeeItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipient     string                 `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"` // 接收地址
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`       // 手续费
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapFeeItem) Reset() {
	*x = SwapFeeItem{}
	mi := &file_block_v1_block_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapFeeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapFeeItem) ProtoMessage() {}

func (x *SwapFeeItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapFeeItem.ProtoReflect.Descriptor instead.
func (*SwapFeeItem) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{29}
}

func (x *SwapFeeItem) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *SwapFeeItem) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type SwapReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RawTransaction []string               `protobuf:"bytes,1,rep,name=raw_transaction,json=rawTransaction,proto3" json:"raw_transaction,omitempty"` // 交易
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SwapReply) Reset() {
	*x = SwapReply{}
	mi := &file_block_v1_block_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapReply) ProtoMessage() {}

func (x *SwapReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapReply.ProtoReflect.Descriptor instead.
func (*SwapReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{30}
}

func (x *SwapReply) GetRawTransaction() []string {
	if x != nil {
		return x.RawTransaction
	}
	return nil
}

type TransferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                   // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                               // 网络名称
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                                 // 数量
	TokenAddress  string                 `protobuf:"bytes,4,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"` // 代币地址
	UserAddress   string                 `protobuf:"bytes,5,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`    // 用户地址
	ToAddress     string                 `protobuf:"bytes,6,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`          // 目标地址
	Nonce         *uint64                `protobuf:"varint,7,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`                            // Nonce
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	mi := &file_block_v1_block_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{31}
}

func (x *TransferRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *TransferRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *TransferRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransferRequest) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *TransferRequest) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *TransferRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransferRequest) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

type TransferReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RawTransaction     string                 `protobuf:"bytes,1,opt,name=raw_transaction,json=rawTransaction,proto3" json:"raw_transaction,omitempty"`                     // 交易
	TronResourceDetail *TRONResourceDetail    `protobuf:"bytes,2,opt,name=tron_resource_detail,json=tronResourceDetail,proto3,oneof" json:"tron_resource_detail,omitempty"` // TRON 资源详情
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TransferReply) Reset() {
	*x = TransferReply{}
	mi := &file_block_v1_block_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferReply) ProtoMessage() {}

func (x *TransferReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferReply.ProtoReflect.Descriptor instead.
func (*TransferReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{32}
}

func (x *TransferReply) GetRawTransaction() string {
	if x != nil {
		return x.RawTransaction
	}
	return ""
}

func (x *TransferReply) GetTronResourceDetail() *TRONResourceDetail {
	if x != nil {
		return x.TronResourceDetail
	}
	return nil
}

type TRONResourceDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Energy        string                 `protobuf:"bytes,1,opt,name=energy,proto3" json:"energy,omitempty"`                                    // 当前交易的能量数
	Bandwidth     string                 `protobuf:"bytes,2,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`                              // 当前交易的带宽数
	UserEnergy    string                 `protobuf:"bytes,3,opt,name=user_energy,json=userEnergy,proto3" json:"user_energy,omitempty"`          // 当前用户能量数
	UserBandwidth string                 `protobuf:"bytes,4,opt,name=user_bandwidth,json=userBandwidth,proto3" json:"user_bandwidth,omitempty"` // 当前用户带宽数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TRONResourceDetail) Reset() {
	*x = TRONResourceDetail{}
	mi := &file_block_v1_block_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TRONResourceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRONResourceDetail) ProtoMessage() {}

func (x *TRONResourceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRONResourceDetail.ProtoReflect.Descriptor instead.
func (*TRONResourceDetail) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{33}
}

func (x *TRONResourceDetail) GetEnergy() string {
	if x != nil {
		return x.Energy
	}
	return ""
}

func (x *TRONResourceDetail) GetBandwidth() string {
	if x != nil {
		return x.Bandwidth
	}
	return ""
}

func (x *TRONResourceDetail) GetUserEnergy() string {
	if x != nil {
		return x.UserEnergy
	}
	return ""
}

func (x *TRONResourceDetail) GetUserBandwidth() string {
	if x != nil {
		return x.UserBandwidth
	}
	return ""
}

type ApproveRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Owner           string                 `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Spender         string                 `protobuf:"bytes,4,opt,name=spender,proto3" json:"spender,omitempty"`
	Amount          string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	ContractAddress string                 `protobuf:"bytes,6,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Nonce           uint64                 `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ApproveRequest) Reset() {
	*x = ApproveRequest{}
	mi := &file_block_v1_block_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveRequest) ProtoMessage() {}

func (x *ApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveRequest.ProtoReflect.Descriptor instead.
func (*ApproveRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{34}
}

func (x *ApproveRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *ApproveRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ApproveRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ApproveRequest) GetSpender() string {
	if x != nil {
		return x.Spender
	}
	return ""
}

func (x *ApproveRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ApproveRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *ApproveRequest) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type ApproveReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RawTransaction string                 `protobuf:"bytes,1,opt,name=raw_transaction,json=rawTransaction,proto3" json:"raw_transaction,omitempty"` // 交易
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApproveReply) Reset() {
	*x = ApproveReply{}
	mi := &file_block_v1_block_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveReply) ProtoMessage() {}

func (x *ApproveReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveReply.ProtoReflect.Descriptor instead.
func (*ApproveReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{35}
}

func (x *ApproveReply) GetRawTransaction() string {
	if x != nil {
		return x.RawTransaction
	}
	return ""
}

type CallBundleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 指定的链
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // 网络名称
	Txs           []string               `protobuf:"bytes,3,rep,name=txs,proto3" json:"txs,omitempty"`         // 交易列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallBundleRequest) Reset() {
	*x = CallBundleRequest{}
	mi := &file_block_v1_block_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallBundleRequest) ProtoMessage() {}

func (x *CallBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallBundleRequest.ProtoReflect.Descriptor instead.
func (*CallBundleRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{36}
}

func (x *CallBundleRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CallBundleRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CallBundleRequest) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

type CallBundleReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHashes      []string               `protobuf:"bytes,1,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty"`                                                       // 交易哈希列表
	Errors        map[string]string      `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // key: 交易哈希, value: 交易执行结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallBundleReply) Reset() {
	*x = CallBundleReply{}
	mi := &file_block_v1_block_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallBundleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallBundleReply) ProtoMessage() {}

func (x *CallBundleReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallBundleReply.ProtoReflect.Descriptor instead.
func (*CallBundleReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{37}
}

func (x *CallBundleReply) GetTxHashes() []string {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

func (x *CallBundleReply) GetErrors() map[string]string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type SendPrivateTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RawTxs        []string               `protobuf:"bytes,1,rep,name=raw_txs,json=rawTxs,proto3" json:"raw_txs,omitempty"` // 多笔原始交易数据
	Chain         string                 `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`                 // 指定的链
	Network       string                 `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`             // 网络名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendPrivateTransactionRequest) Reset() {
	*x = SendPrivateTransactionRequest{}
	mi := &file_block_v1_block_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendPrivateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPrivateTransactionRequest) ProtoMessage() {}

func (x *SendPrivateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPrivateTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendPrivateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{38}
}

func (x *SendPrivateTransactionRequest) GetRawTxs() []string {
	if x != nil {
		return x.RawTxs
	}
	return nil
}

func (x *SendPrivateTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SendPrivateTransactionRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type SendPrivateTransactionReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hashes        []string               `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"` // 成功的交易哈希列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendPrivateTransactionReply) Reset() {
	*x = SendPrivateTransactionReply{}
	mi := &file_block_v1_block_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendPrivateTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPrivateTransactionReply) ProtoMessage() {}

func (x *SendPrivateTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPrivateTransactionReply.ProtoReflect.Descriptor instead.
func (*SendPrivateTransactionReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{39}
}

func (x *SendPrivateTransactionReply) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type CreateAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // 网络名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddressRequest) Reset() {
	*x = CreateAddressRequest{}
	mi := &file_block_v1_block_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressRequest) ProtoMessage() {}

func (x *CreateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressRequest.ProtoReflect.Descriptor instead.
func (*CreateAddressRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{40}
}

func (x *CreateAddressRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CreateAddressRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type CreateAddressReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                         // 地址
	PrivateKey    string                 `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"` // 私钥
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddressReply) Reset() {
	*x = CreateAddressReply{}
	mi := &file_block_v1_block_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressReply) ProtoMessage() {}

func (x *CreateAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressReply.ProtoReflect.Descriptor instead.
func (*CreateAddressReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{41}
}

func (x *CreateAddressReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateAddressReply) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type CreateAddressBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // 网络名称
	Count         uint32                 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`    // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddressBatchRequest) Reset() {
	*x = CreateAddressBatchRequest{}
	mi := &file_block_v1_block_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddressBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressBatchRequest) ProtoMessage() {}

func (x *CreateAddressBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateAddressBatchRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{42}
}

func (x *CreateAddressBatchRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CreateAddressBatchRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CreateAddressBatchRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CreateAddressBatchReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addresses     []*CreateAddressReply  `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"` // 地址列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddressBatchReply) Reset() {
	*x = CreateAddressBatchReply{}
	mi := &file_block_v1_block_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddressBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressBatchReply) ProtoMessage() {}

func (x *CreateAddressBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressBatchReply.ProtoReflect.Descriptor instead.
func (*CreateAddressBatchReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{43}
}

func (x *CreateAddressBatchReply) GetAddresses() []*CreateAddressReply {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GetTransactionByHashRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	TransactionHash string                 `protobuf:"bytes,3,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"` // 交易哈希
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTransactionByHashRequest) Reset() {
	*x = GetTransactionByHashRequest{}
	mi := &file_block_v1_block_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashRequest) ProtoMessage() {}

func (x *GetTransactionByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{44}
}

func (x *GetTransactionByHashRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTransactionByHashRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTransactionByHashRequest) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

type GetTransactionByHashReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionHash string                 `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"` // 交易哈希
	FromAddress     string                 `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`             // 发起地址
	ToAddress       []string               `protobuf:"bytes,3,rep,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`                   // 接收地址
	Status          TransactionStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=api.block.v1.TransactionStatus" json:"status,omitempty"`     // 状态
	BlockNumber     string                 `protobuf:"bytes,5,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`             // 区块号
	BlockTime       string                 `protobuf:"bytes,6,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`                   // 区块时间
	RawTransaction  string                 `protobuf:"bytes,7,opt,name=raw_transaction,json=rawTransaction,proto3" json:"raw_transaction,omitempty"`    // 原始交易
	Error           string                 `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`                                            // 错误信息
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTransactionByHashReply) Reset() {
	*x = GetTransactionByHashReply{}
	mi := &file_block_v1_block_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionByHashReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashReply) ProtoMessage() {}

func (x *GetTransactionByHashReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashReply.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{45}
}

func (x *GetTransactionByHashReply) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *GetTransactionByHashReply) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *GetTransactionByHashReply) GetToAddress() []string {
	if x != nil {
		return x.ToAddress
	}
	return nil
}

func (x *GetTransactionByHashReply) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_TRANSACTION_STATUS_PENDING
}

func (x *GetTransactionByHashReply) GetBlockNumber() string {
	if x != nil {
		return x.BlockNumber
	}
	return ""
}

func (x *GetTransactionByHashReply) GetBlockTime() string {
	if x != nil {
		return x.BlockTime
	}
	return ""
}

func (x *GetTransactionByHashReply) GetRawTransaction() string {
	if x != nil {
		return x.RawTransaction
	}
	return ""
}

func (x *GetTransactionByHashReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetLiquidityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                   // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                               // 网络名称
	TokenAddress  string                 `protobuf:"bytes,3,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"` // 代币地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLiquidityRequest) Reset() {
	*x = GetLiquidityRequest{}
	mi := &file_block_v1_block_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiquidityRequest) ProtoMessage() {}

func (x *GetLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiquidityRequest.ProtoReflect.Descriptor instead.
func (*GetLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{46}
}

func (x *GetLiquidityRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetLiquidityRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetLiquidityRequest) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

type GetLiquidityReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LiquidityLabel     string                 `protobuf:"bytes,1,opt,name=liquidity_label,json=liquidityLabel,proto3" json:"liquidity_label,omitempty"`               // 流动性标签
	LiquidityAddress   string                 `protobuf:"bytes,2,opt,name=liquidity_address,json=liquidityAddress,proto3" json:"liquidity_address,omitempty"`         // 流动性地址
	LiquidityType      string                 `protobuf:"bytes,3,opt,name=liquidity_type,json=liquidityType,proto3" json:"liquidity_type,omitempty"`                  // 流动性类型
	LiquidityMarketCap string                 `protobuf:"bytes,4,opt,name=liquidity_market_cap,json=liquidityMarketCap,proto3" json:"liquidity_market_cap,omitempty"` // 流动性市值
	VirtualTrade       bool                   `protobuf:"varint,5,opt,name=virtual_trade,json=virtualTrade,proto3" json:"virtual_trade,omitempty"`                    // 虚拟交易
	Progress           string                 `protobuf:"bytes,6,opt,name=progress,proto3" json:"progress,omitempty"`                                                 // 进度
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetLiquidityReply) Reset() {
	*x = GetLiquidityReply{}
	mi := &file_block_v1_block_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLiquidityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiquidityReply) ProtoMessage() {}

func (x *GetLiquidityReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiquidityReply.ProtoReflect.Descriptor instead.
func (*GetLiquidityReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{47}
}

func (x *GetLiquidityReply) GetLiquidityLabel() string {
	if x != nil {
		return x.LiquidityLabel
	}
	return ""
}

func (x *GetLiquidityReply) GetLiquidityAddress() string {
	if x != nil {
		return x.LiquidityAddress
	}
	return ""
}

func (x *GetLiquidityReply) GetLiquidityType() string {
	if x != nil {
		return x.LiquidityType
	}
	return ""
}

func (x *GetLiquidityReply) GetLiquidityMarketCap() string {
	if x != nil {
		return x.LiquidityMarketCap
	}
	return ""
}

func (x *GetLiquidityReply) GetVirtualTrade() bool {
	if x != nil {
		return x.VirtualTrade
	}
	return false
}

func (x *GetLiquidityReply) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

type GetPendingNonceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // 网络名称
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"` // 地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPendingNonceRequest) Reset() {
	*x = GetPendingNonceRequest{}
	mi := &file_block_v1_block_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPendingNonceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingNonceRequest) ProtoMessage() {}

func (x *GetPendingNonceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingNonceRequest.ProtoReflect.Descriptor instead.
func (*GetPendingNonceRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{48}
}

func (x *GetPendingNonceRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetPendingNonceRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetPendingNonceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetPendingNonceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         uint64                 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"` // 非零
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPendingNonceReply) Reset() {
	*x = GetPendingNonceReply{}
	mi := &file_block_v1_block_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPendingNonceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingNonceReply) ProtoMessage() {}

func (x *GetPendingNonceReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingNonceReply.ProtoReflect.Descriptor instead.
func (*GetPendingNonceReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{49}
}

func (x *GetPendingNonceReply) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type GetTokenSecurityRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	ContractAddress string                 `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"` // 合约地址
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTokenSecurityRequest) Reset() {
	*x = GetTokenSecurityRequest{}
	mi := &file_block_v1_block_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenSecurityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenSecurityRequest) ProtoMessage() {}

func (x *GetTokenSecurityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenSecurityRequest.ProtoReflect.Descriptor instead.
func (*GetTokenSecurityRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{50}
}

func (x *GetTokenSecurityRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTokenSecurityRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTokenSecurityRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type GetTokenSecurityReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuyTaxRate    string                 `protobuf:"bytes,1,opt,name=buy_tax_rate,json=buyTaxRate,proto3" json:"buy_tax_rate,omitempty"`    // 买入税率
	SellTaxRate   string                 `protobuf:"bytes,2,opt,name=sell_tax_rate,json=sellTaxRate,proto3" json:"sell_tax_rate,omitempty"` // 卖出税率
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenSecurityReply) Reset() {
	*x = GetTokenSecurityReply{}
	mi := &file_block_v1_block_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenSecurityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenSecurityReply) ProtoMessage() {}

func (x *GetTokenSecurityReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenSecurityReply.ProtoReflect.Descriptor instead.
func (*GetTokenSecurityReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{51}
}

func (x *GetTokenSecurityReply) GetBuyTaxRate() string {
	if x != nil {
		return x.BuyTaxRate
	}
	return ""
}

func (x *GetTokenSecurityReply) GetSellTaxRate() string {
	if x != nil {
		return x.SellTaxRate
	}
	return ""
}

type GetTokenMediaRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	ContractAddress string                 `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"` // 合约地址
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTokenMediaRequest) Reset() {
	*x = GetTokenMediaRequest{}
	mi := &file_block_v1_block_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenMediaRequest) ProtoMessage() {}

func (x *GetTokenMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenMediaRequest.ProtoReflect.Descriptor instead.
func (*GetTokenMediaRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{52}
}

func (x *GetTokenMediaRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTokenMediaRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTokenMediaRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type GetTokenMediaReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogoUrl       string                 `protobuf:"bytes,1,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`             // 代币logo
	TwitterUrl    string                 `protobuf:"bytes,2,opt,name=twitter_url,json=twitterUrl,proto3" json:"twitter_url,omitempty"`    // 推特URL
	TelegramUrl   string                 `protobuf:"bytes,3,opt,name=telegram_url,json=telegramUrl,proto3" json:"telegram_url,omitempty"` // 电报URL
	WebsiteUrl    string                 `protobuf:"bytes,4,opt,name=website_url,json=websiteUrl,proto3" json:"website_url,omitempty"`    // 网站URL
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                    // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenMediaReply) Reset() {
	*x = GetTokenMediaReply{}
	mi := &file_block_v1_block_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenMediaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenMediaReply) ProtoMessage() {}

func (x *GetTokenMediaReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenMediaReply.ProtoReflect.Descriptor instead.
func (*GetTokenMediaReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{53}
}

func (x *GetTokenMediaReply) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GetTokenMediaReply) GetTwitterUrl() string {
	if x != nil {
		return x.TwitterUrl
	}
	return ""
}

func (x *GetTokenMediaReply) GetTelegramUrl() string {
	if x != nil {
		return x.TelegramUrl
	}
	return ""
}

func (x *GetTokenMediaReply) GetWebsiteUrl() string {
	if x != nil {
		return x.WebsiteUrl
	}
	return ""
}

func (x *GetTokenMediaReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetTokenPoolInfoRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                            // 链名称
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                        // 网络名称
	ContractAddress string                 `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"` // 合约地址
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTokenPoolInfoRequest) Reset() {
	*x = GetTokenPoolInfoRequest{}
	mi := &file_block_v1_block_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPoolInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPoolInfoRequest) ProtoMessage() {}

func (x *GetTokenPoolInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPoolInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTokenPoolInfoRequest) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{54}
}

func (x *GetTokenPoolInfoRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTokenPoolInfoRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTokenPoolInfoRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type GetTokenPoolInfoReply struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	PoolAddress                 string                 `protobuf:"bytes,1,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`                                                        // 池子地址
	PoolType                    string                 `protobuf:"bytes,2,opt,name=pool_type,json=poolType,proto3" json:"pool_type,omitempty"`                                                                 // 池子类型
	BaseTokenAddress            string                 `protobuf:"bytes,3,opt,name=base_token_address,json=baseTokenAddress,proto3" json:"base_token_address,omitempty"`                                       // 基础代币地址
	QuoteTokenAddress           string                 `protobuf:"bytes,4,opt,name=quote_token_address,json=quoteTokenAddress,proto3" json:"quote_token_address,omitempty"`                                    // 报价代币地址
	BaseTokenSymbol             string                 `protobuf:"bytes,5,opt,name=base_token_symbol,json=baseTokenSymbol,proto3" json:"base_token_symbol,omitempty"`                                          // 基础代币符号
	QuoteTokenSymbol            string                 `protobuf:"bytes,6,opt,name=quote_token_symbol,json=quoteTokenSymbol,proto3" json:"quote_token_symbol,omitempty"`                                       // 报价代币符号
	BaseTokenLiquidityAmount    string                 `protobuf:"bytes,7,opt,name=base_token_liquidity_amount,json=baseTokenLiquidityAmount,proto3" json:"base_token_liquidity_amount,omitempty"`             // 基础代币流动性数量
	QuoteTokenLiquidityAmount   string                 `protobuf:"bytes,8,opt,name=quote_token_liquidity_amount,json=quoteTokenLiquidityAmount,proto3" json:"quote_token_liquidity_amount,omitempty"`          // 报价代币流动性数量
	BaseTokenLiquidityUsdValue  string                 `protobuf:"bytes,9,opt,name=base_token_liquidity_usd_value,json=baseTokenLiquidityUsdValue,proto3" json:"base_token_liquidity_usd_value,omitempty"`     // 基础代币流动性USD价值
	QuoteTokenLiquidityUsdValue string                 `protobuf:"bytes,10,opt,name=quote_token_liquidity_usd_value,json=quoteTokenLiquidityUsdValue,proto3" json:"quote_token_liquidity_usd_value,omitempty"` // 报价代币流动性USD价值
	TokenMarketCap              string                 `protobuf:"bytes,11,opt,name=token_market_cap,json=tokenMarketCap,proto3" json:"token_market_cap,omitempty"`                                            // 代币市值
	TokenLiquidityMarketCap     string                 `protobuf:"bytes,12,opt,name=token_liquidity_market_cap,json=tokenLiquidityMarketCap,proto3" json:"token_liquidity_market_cap,omitempty"`               // 代币流动性市值
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *GetTokenPoolInfoReply) Reset() {
	*x = GetTokenPoolInfoReply{}
	mi := &file_block_v1_block_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPoolInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPoolInfoReply) ProtoMessage() {}

func (x *GetTokenPoolInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_v1_block_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPoolInfoReply.ProtoReflect.Descriptor instead.
func (*GetTokenPoolInfoReply) Descriptor() ([]byte, []int) {
	return file_block_v1_block_proto_rawDescGZIP(), []int{55}
}

func (x *GetTokenPoolInfoReply) GetPoolAddress() string {
	if x != nil {
		return x.PoolAddress
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetPoolType() string {
	if x != nil {
		return x.PoolType
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetBaseTokenAddress() string {
	if x != nil {
		return x.BaseTokenAddress
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetQuoteTokenAddress() string {
	if x != nil {
		return x.QuoteTokenAddress
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetBaseTokenSymbol() string {
	if x != nil {
		return x.BaseTokenSymbol
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetQuoteTokenSymbol() string {
	if x != nil {
		return x.QuoteTokenSymbol
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetBaseTokenLiquidityAmount() string {
	if x != nil {
		return x.BaseTokenLiquidityAmount
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetQuoteTokenLiquidityAmount() string {
	if x != nil {
		return x.QuoteTokenLiquidityAmount
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetBaseTokenLiquidityUsdValue() string {
	if x != nil {
		return x.BaseTokenLiquidityUsdValue
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetQuoteTokenLiquidityUsdValue() string {
	if x != nil {
		return x.QuoteTokenLiquidityUsdValue
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetTokenMarketCap() string {
	if x != nil {
		return x.TokenMarketCap
	}
	return ""
}

func (x *GetTokenPoolInfoReply) GetTokenLiquidityMarketCap() string {
	if x != nil {
		return x.TokenLiquidityMarketCap
	}
	return ""
}

var File_block_v1_block_proto protoreflect.FileDescriptor

const file_block_v1_block_proto_rawDesc = "" +
	"\n" +
	"\x14block/v1/block.proto\x12\fapi.block.v1\";\n" +
	"\x11NetworkConfigItem\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\x88\x01\n" +
	"\vNetworkItem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x05R\x04type\x129\n" +
	"\aconfigs\x18\x05 \x03(\v2\x1f.api.block.v1.NetworkConfigItemR\aconfigs\"q\n" +
	"\fMetadataItem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x125\n" +
	"\bnetworks\x18\x03 \x03(\v2\x19.api.block.v1.NetworkItemR\bnetworks\"\x8d\x01\n" +
	"\x16GetTokenBalanceRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x14\n" +
	"\x05chain\x18\x02 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x03 \x01(\tR\anetwork\x12)\n" +
	"\x10contract_address\x18\x04 \x01(\tR\x0fcontractAddress\"\x9d\x01\n" +
	"\x14GetTokenBalanceReply\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x12\x1a\n" +
	"\bdecimals\x18\x02 \x01(\rR\bdecimals\x12#\n" +
	"\rparse_balance\x18\x03 \x01(\tR\fparseBalance\x12*\n" +
	"\x11parse_usd_balance\x18\x04 \x01(\tR\x0fparseUsdBalance\"h\n" +
	"\x1bGetTokenBalanceBatchRequest\x12I\n" +
	"\rbalance_items\x18\x01 \x03(\v2$.api.block.v1.GetTokenBalanceRequestR\fbalanceItems\"\xe4\x01\n" +
	"\x19GetTokenBalanceBatchReply\x12a\n" +
	"\x0ebalance_result\x18\x01 \x03(\v2:.api.block.v1.GetTokenBalanceBatchReply.BalanceResultEntryR\rbalanceResult\x1ad\n" +
	"\x12BalanceResultEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".api.block.v1.GetTokenBalanceReplyR\x05value:\x028\x01\"p\n" +
	"\x13GetTokenInfoRequest\x12)\n" +
	"\x10contract_address\x18\x01 \x01(\tR\x0fcontractAddress\x12\x14\n" +
	"\x05chain\x18\x02 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x03 \x01(\tR\anetwork\"\x8e\x02\n" +
	"\x11GetTokenInfoReply\x12\x1d\n" +
	"\n" +
	"token_name\x18\x01 \x01(\tR\ttokenName\x12!\n" +
	"\ftoken_symbol\x18\x02 \x01(\tR\vtokenSymbol\x12%\n" +
	"\x0etoken_decimals\x18\x03 \x01(\rR\rtokenDecimals\x12,\n" +
	"\x12token_total_supply\x18\x04 \x01(\tR\x10tokenTotalSupply\x127\n" +
	"\x18parse_token_total_supply\x18\x05 \x01(\tR\x15parseTokenTotalSupply\x12)\n" +
	"\x10update_authority\x18\x06 \x01(\tR\x0fupdateAuthority\"\\\n" +
	"\x18GetTokenInfoBatchRequest\x12@\n" +
	"\n" +
	"info_items\x18\x01 \x03(\v2!.api.block.v1.GetTokenInfoRequestR\tinfoItems\"\xcf\x01\n" +
	"\x16GetTokenInfoBatchReply\x12U\n" +
	"\vinfo_result\x18\x01 \x03(\v24.api.block.v1.GetTokenInfoBatchReply.InfoResultEntryR\n" +
	"infoResult\x1a^\n" +
	"\x0fInfoResultEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.api.block.v1.GetTokenInfoReplyR\x05value:\x028\x01\"w\n" +
	"\x16SendTransactionRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12-\n" +
	"\x12signed_transaction\x18\x03 \x03(\tR\x11signedTransaction\"A\n" +
	"\x14SendTransactionReply\x12)\n" +
	"\x10transaction_hash\x18\x01 \x03(\tR\x0ftransactionHash\"x\n" +
	"\x1bGetTransactionStatusRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12)\n" +
	"\x10transaction_hash\x18\x03 \x01(\tR\x0ftransactionHash\"K\n" +
	"\x19GetTransactionStatusReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"v\n" +
	"\x15GetExplorerURLRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x19\n" +
	"\burl_type\x18\x03 \x01(\tR\aurlType\x12\x12\n" +
	"\x04data\x18\x04 \x01(\tR\x04data\"'\n" +
	"\x13GetExplorerURLReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"b\n" +
	"\x16ValidateAddressRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x14\n" +
	"\x05chain\x18\x02 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x03 \x01(\tR\anetwork\",\n" +
	"\x14ValidateAddressReply\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\"M\n" +
	"\x1bSubscribeTransactionRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\"g\n" +
	"\x19SubscribeTransactionReply\x12J\n" +
	"\ftransactions\x18\x01 \x03(\v2&.api.block.v1.SubscribeTransactionItemR\ftransactions\"\xce\x04\n" +
	"\x18SubscribeTransactionItem\x12&\n" +
	"\fblock_number\x18\x01 \x01(\x03H\x00R\vblockNumber\x88\x01\x01\x12\"\n" +
	"\n" +
	"block_time\x18\x02 \x01(\x03H\x01R\tblockTime\x88\x01\x01\x12&\n" +
	"\ffrom_address\x18\x03 \x01(\tH\x02R\vfromAddress\x88\x01\x01\x12\"\n" +
	"\n" +
	"to_address\x18\x04 \x01(\tH\x03R\ttoAddress\x88\x01\x01\x12\x19\n" +
	"\x05value\x18\x05 \x01(\tH\x04R\x05value\x88\x01\x01\x12\x17\n" +
	"\x04hash\x18\x06 \x01(\tH\x05R\x04hash\x88\x01\x01\x12\x1b\n" +
	"\x06symbol\x18\a \x01(\tH\x06R\x06symbol\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\b \x01(\bH\aR\x06status\x88\x01\x01\x12\x19\n" +
	"\x05chain\x18\t \x01(\tH\bR\x05chain\x88\x01\x01\x12\x1d\n" +
	"\anetwork\x18\n" +
	" \x01(\tH\tR\anetwork\x88\x01\x01\x12.\n" +
	"\x10contract_address\x18\v \x01(\tH\n" +
	"R\x0fcontractAddress\x88\x01\x01\x12 \n" +
	"\tis_native\x18\f \x01(\bH\vR\bisNative\x88\x01\x01B\x0f\n" +
	"\r_block_numberB\r\n" +
	"\v_block_timeB\x0f\n" +
	"\r_from_addressB\r\n" +
	"\v_to_addressB\b\n" +
	"\x06_valueB\a\n" +
	"\x05_hashB\t\n" +
	"\a_symbolB\t\n" +
	"\a_statusB\b\n" +
	"\x06_chainB\n" +
	"\n" +
	"\b_networkB\x13\n" +
	"\x11_contract_addressB\f\n" +
	"\n" +
	"_is_native\"q\n" +
	"\x14GetTokenPriceRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12)\n" +
	"\x10contract_address\x18\x03 \x01(\tR\x0fcontractAddress\"\xb8\x02\n" +
	"\x12GetTokenPriceReply\x12,\n" +
	"\x12native_token_price\x18\x01 \x01(\tR\x10nativeTokenPrice\x122\n" +
	"\x15native_token_decimals\x18\x02 \x01(\rR\x13nativeTokenDecimals\x127\n" +
	"\x18native_token_parse_price\x18\x03 \x01(\tR\x15nativeTokenParsePrice\x12&\n" +
	"\x0fusd_token_price\x18\x04 \x01(\tR\rusdTokenPrice\x12,\n" +
	"\x12usd_token_decimals\x18\x05 \x01(\rR\x10usdTokenDecimals\x121\n" +
	"\x15usd_token_parse_price\x18\x06 \x01(\tR\x12usdTokenParsePrice\"`\n" +
	"\x19GetTokenPriceBatchRequest\x12C\n" +
	"\vprice_items\x18\x01 \x03(\v2\".api.block.v1.GetTokenPriceRequestR\n" +
	"priceItems\"\xd6\x01\n" +
	"\x17GetTokenPriceBatchReply\x12Y\n" +
	"\fprice_result\x18\x01 \x03(\v26.api.block.v1.GetTokenPriceBatchReply.PriceResultEntryR\vpriceResult\x1a`\n" +
	"\x10PriceResultEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .api.block.v1.GetTokenPriceReplyR\x05value:\x028\x01\"\xaa\x03\n" +
	"\vSwapRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12!\n" +
	"\fuser_address\x18\x03 \x01(\tR\vuserAddress\x12,\n" +
	"\x12from_token_address\x18\x04 \x01(\tR\x10fromTokenAddress\x12(\n" +
	"\x10to_token_address\x18\x05 \x01(\tR\x0etoTokenAddress\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\tR\x06amount\x12\x1a\n" +
	"\bslippage\x18\a \x01(\x01R\bslippage\x12=\n" +
	"\n" +
	"before_fee\x18\b \x01(\v2\x19.api.block.v1.SwapFeeItemH\x00R\tbeforeFee\x88\x01\x01\x12;\n" +
	"\tafter_fee\x18\t \x01(\v2\x19.api.block.v1.SwapFeeItemH\x01R\bafterFee\x88\x01\x01\x12\x19\n" +
	"\x05nonce\x18\n" +
	" \x01(\x04H\x02R\x05nonce\x88\x01\x01B\r\n" +
	"\v_before_feeB\f\n" +
	"\n" +
	"_after_feeB\b\n" +
	"\x06_nonce\"\x9f\x01\n" +
	"\fQuoteRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x1c\n" +
	"\tdirection\x18\x03 \x01(\rR\tdirection\x12)\n" +
	"\x10contract_address\x18\x04 \x01(\tR\x0fcontractAddress\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\"+\n" +
	"\n" +
	"QuoteReply\x12\x1d\n" +
	"\n" +
	"out_amount\x18\x01 \x01(\tR\toutAmount\"C\n" +
	"\vSwapFeeItem\x12\x1c\n" +
	"\trecipient\x18\x01 \x01(\tR\trecipient\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\"4\n" +
	"\tSwapReply\x12'\n" +
	"\x0fraw_transaction\x18\x01 \x03(\tR\x0erawTransaction\"\xe5\x01\n" +
	"\x0fTransferRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\x12#\n" +
	"\rtoken_address\x18\x04 \x01(\tR\ftokenAddress\x12!\n" +
	"\fuser_address\x18\x05 \x01(\tR\vuserAddress\x12\x1d\n" +
	"\n" +
	"to_address\x18\x06 \x01(\tR\ttoAddress\x12\x19\n" +
	"\x05nonce\x18\a \x01(\x04H\x00R\x05nonce\x88\x01\x01B\b\n" +
	"\x06_nonce\"\xaa\x01\n" +
	"\rTransferReply\x12'\n" +
	"\x0fraw_transaction\x18\x01 \x01(\tR\x0erawTransaction\x12W\n" +
	"\x14tron_resource_detail\x18\x02 \x01(\v2 .api.block.v1.TRONResourceDetailH\x00R\x12tronResourceDetail\x88\x01\x01B\x17\n" +
	"\x15_tron_resource_detail\"\x92\x01\n" +
	"\x12TRONResourceDetail\x12\x16\n" +
	"\x06energy\x18\x01 \x01(\tR\x06energy\x12\x1c\n" +
	"\tbandwidth\x18\x02 \x01(\tR\tbandwidth\x12\x1f\n" +
	"\vuser_energy\x18\x03 \x01(\tR\n" +
	"userEnergy\x12%\n" +
	"\x0euser_bandwidth\x18\x04 \x01(\tR\ruserBandwidth\"\xc9\x01\n" +
	"\x0eApproveRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x14\n" +
	"\x05owner\x18\x03 \x01(\tR\x05owner\x12\x18\n" +
	"\aspender\x18\x04 \x01(\tR\aspender\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12)\n" +
	"\x10contract_address\x18\x06 \x01(\tR\x0fcontractAddress\x12\x14\n" +
	"\x05nonce\x18\a \x01(\x04R\x05nonce\"7\n" +
	"\fApproveReply\x12'\n" +
	"\x0fraw_transaction\x18\x01 \x01(\tR\x0erawTransaction\"U\n" +
	"\x11CallBundleRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x10\n" +
	"\x03txs\x18\x03 \x03(\tR\x03txs\"\xac\x01\n" +
	"\x0fCallBundleReply\x12\x1b\n" +
	"\ttx_hashes\x18\x01 \x03(\tR\btxHashes\x12A\n" +
	"\x06errors\x18\x02 \x03(\v2).api.block.v1.CallBundleReply.ErrorsEntryR\x06errors\x1a9\n" +
	"\vErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"\x1dSendPrivateTransactionRequest\x12\x17\n" +
	"\araw_txs\x18\x01 \x03(\tR\x06rawTxs\x12\x14\n" +
	"\x05chain\x18\x02 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x03 \x01(\tR\anetwork\"5\n" +
	"\x1bSendPrivateTransactionReply\x12\x16\n" +
	"\x06hashes\x18\x01 \x03(\tR\x06hashes\"F\n" +
	"\x14CreateAddressRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\"O\n" +
	"\x12CreateAddressReply\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1f\n" +
	"\vprivate_key\x18\x02 \x01(\tR\n" +
	"privateKey\"a\n" +
	"\x19CreateAddressBatchRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x14\n" +
	"\x05count\x18\x03 \x01(\rR\x05count\"Y\n" +
	"\x17CreateAddressBatchReply\x12>\n" +
	"\taddresses\x18\x01 \x03(\v2 .api.block.v1.CreateAddressReplyR\taddresses\"x\n" +
	"\x1bGetTransactionByHashRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12)\n" +
	"\x10transaction_hash\x18\x03 \x01(\tR\x0ftransactionHash\"\xc2\x02\n" +
	"\x19GetTransactionByHashReply\x12)\n" +
	"\x10transaction_hash\x18\x01 \x01(\tR\x0ftransactionHash\x12!\n" +
	"\ffrom_address\x18\x02 \x01(\tR\vfromAddress\x12\x1d\n" +
	"\n" +
	"to_address\x18\x03 \x03(\tR\ttoAddress\x127\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1f.api.block.v1.TransactionStatusR\x06status\x12!\n" +
	"\fblock_number\x18\x05 \x01(\tR\vblockNumber\x12\x1d\n" +
	"\n" +
	"block_time\x18\x06 \x01(\tR\tblockTime\x12'\n" +
	"\x0fraw_transaction\x18\a \x01(\tR\x0erawTransaction\x12\x14\n" +
	"\x05error\x18\b \x01(\tR\x05error\"j\n" +
	"\x13GetLiquidityRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12#\n" +
	"\rtoken_address\x18\x03 \x01(\tR\ftokenAddress\"\x83\x02\n" +
	"\x11GetLiquidityReply\x12'\n" +
	"\x0fliquidity_label\x18\x01 \x01(\tR\x0eliquidityLabel\x12+\n" +
	"\x11liquidity_address\x18\x02 \x01(\tR\x10liquidityAddress\x12%\n" +
	"\x0eliquidity_type\x18\x03 \x01(\tR\rliquidityType\x120\n" +
	"\x14liquidity_market_cap\x18\x04 \x01(\tR\x12liquidityMarketCap\x12#\n" +
	"\rvirtual_trade\x18\x05 \x01(\bR\fvirtualTrade\x12\x1a\n" +
	"\bprogress\x18\x06 \x01(\tR\bprogress\"b\n" +
	"\x16GetPendingNonceRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\",\n" +
	"\x14GetPendingNonceReply\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\x04R\x05nonce\"t\n" +
	"\x17GetTokenSecurityRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12)\n" +
	"\x10contract_address\x18\x03 \x01(\tR\x0fcontractAddress\"]\n" +
	"\x15GetTokenSecurityReply\x12 \n" +
	"\fbuy_tax_rate\x18\x01 \x01(\tR\n" +
	"buyTaxRate\x12\"\n" +
	"\rsell_tax_rate\x18\x02 \x01(\tR\vsellTaxRate\"q\n" +
	"\x14GetTokenMediaRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12)\n" +
	"\x10contract_address\x18\x03 \x01(\tR\x0fcontractAddress\"\xb6\x01\n" +
	"\x12GetTokenMediaReply\x12\x19\n" +
	"\blogo_url\x18\x01 \x01(\tR\alogoUrl\x12\x1f\n" +
	"\vtwitter_url\x18\x02 \x01(\tR\n" +
	"twitterUrl\x12!\n" +
	"\ftelegram_url\x18\x03 \x01(\tR\vtelegramUrl\x12\x1f\n" +
	"\vwebsite_url\x18\x04 \x01(\tR\n" +
	"websiteUrl\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"t\n" +
	"\x17GetTokenPoolInfoRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12)\n" +
	"\x10contract_address\x18\x03 \x01(\tR\x0fcontractAddress\"\x80\x05\n" +
	"\x15GetTokenPoolInfoReply\x12!\n" +
	"\fpool_address\x18\x01 \x01(\tR\vpoolAddress\x12\x1b\n" +
	"\tpool_type\x18\x02 \x01(\tR\bpoolType\x12,\n" +
	"\x12base_token_address\x18\x03 \x01(\tR\x10baseTokenAddress\x12.\n" +
	"\x13quote_token_address\x18\x04 \x01(\tR\x11quoteTokenAddress\x12*\n" +
	"\x11base_token_symbol\x18\x05 \x01(\tR\x0fbaseTokenSymbol\x12,\n" +
	"\x12quote_token_symbol\x18\x06 \x01(\tR\x10quoteTokenSymbol\x12=\n" +
	"\x1bbase_token_liquidity_amount\x18\a \x01(\tR\x18baseTokenLiquidityAmount\x12?\n" +
	"\x1cquote_token_liquidity_amount\x18\b \x01(\tR\x19quoteTokenLiquidityAmount\x12B\n" +
	"\x1ebase_token_liquidity_usd_value\x18\t \x01(\tR\x1abaseTokenLiquidityUsdValue\x12D\n" +
	"\x1fquote_token_liquidity_usd_value\x18\n" +
	" \x01(\tR\x1bquoteTokenLiquidityUsdValue\x12(\n" +
	"\x10token_market_cap\x18\v \x01(\tR\x0etokenMarketCap\x12;\n" +
	"\x1atoken_liquidity_market_cap\x18\f \x01(\tR\x17tokenLiquidityMarketCap*\x94\x01\n" +
	"\x11TransactionStatus\x12\x1e\n" +
	"\x1aTRANSACTION_STATUS_PENDING\x10\x00\x12\x1e\n" +
	"\x1aTRANSACTION_STATUS_SUCCESS\x10\x01\x12\x1d\n" +
	"\x19TRANSACTION_STATUS_FAILED\x10\x02\x12 \n" +
	"\x1cTRANSACTION_STATUS_NOT_FOUND\x10\x032\xe9\x0e\n" +
	"\x05Block\x12[\n" +
	"\x0fValidateAddress\x12$.api.block.v1.ValidateAddressRequest\x1a\".api.block.v1.ValidateAddressReply\x12[\n" +
	"\x0fGetTokenBalance\x12$.api.block.v1.GetTokenBalanceRequest\x1a\".api.block.v1.GetTokenBalanceReply\x12j\n" +
	"\x14GetTokenBalanceBatch\x12).api.block.v1.GetTokenBalanceBatchRequest\x1a'.api.block.v1.GetTokenBalanceBatchReply\x12R\n" +
	"\fGetTokenInfo\x12!.api.block.v1.GetTokenInfoRequest\x1a\x1f.api.block.v1.GetTokenInfoReply\x12a\n" +
	"\x11GetTokenInfoBatch\x12&.api.block.v1.GetTokenInfoBatchRequest\x1a$.api.block.v1.GetTokenInfoBatchReply\x12U\n" +
	"\rGetTokenPrice\x12\".api.block.v1.GetTokenPriceRequest\x1a .api.block.v1.GetTokenPriceReply\x12d\n" +
	"\x12GetTokenPriceBatch\x12'.api.block.v1.GetTokenPriceBatchRequest\x1a%.api.block.v1.GetTokenPriceBatchReply\x12:\n" +
	"\x04Swap\x12\x19.api.block.v1.SwapRequest\x1a\x17.api.block.v1.SwapReply\x12=\n" +
	"\x05Quote\x12\x1a.api.block.v1.QuoteRequest\x1a\x18.api.block.v1.QuoteReply\x12F\n" +
	"\bTransfer\x12\x1d.api.block.v1.TransferRequest\x1a\x1b.api.block.v1.TransferReply\x12C\n" +
	"\aApprove\x12\x1c.api.block.v1.ApproveRequest\x1a\x1a.api.block.v1.ApproveReply\x12[\n" +
	"\x0fSendTransaction\x12$.api.block.v1.SendTransactionRequest\x1a\".api.block.v1.SendTransactionReply\x12p\n" +
	"\x16SendPrivateTransaction\x12+.api.block.v1.SendPrivateTransactionRequest\x1a).api.block.v1.SendPrivateTransactionReply\x12U\n" +
	"\rCreateAddress\x12\".api.block.v1.CreateAddressRequest\x1a .api.block.v1.CreateAddressReply\x12d\n" +
	"\x12CreateAddressBatch\x12'.api.block.v1.CreateAddressBatchRequest\x1a%.api.block.v1.CreateAddressBatchReply\x12j\n" +
	"\x14GetTransactionByHash\x12).api.block.v1.GetTransactionByHashRequest\x1a'.api.block.v1.GetTransactionByHashReply\x12R\n" +
	"\fGetLiquidity\x12!.api.block.v1.GetLiquidityRequest\x1a\x1f.api.block.v1.GetLiquidityReply\x12[\n" +
	"\x0fGetPendingNonce\x12$.api.block.v1.GetPendingNonceRequest\x1a\".api.block.v1.GetPendingNonceReply\x12^\n" +
	"\x10GetTokenSecurity\x12%.api.block.v1.GetTokenSecurityRequest\x1a#.api.block.v1.GetTokenSecurityReply\x12U\n" +
	"\rGetTokenMedia\x12\".api.block.v1.GetTokenMediaRequest\x1a .api.block.v1.GetTokenMediaReply\x12^\n" +
	"\x10GetTokenPoolInfo\x12%.api.block.v1.GetTokenPoolInfoRequest\x1a#.api.block.v1.GetTokenPoolInfoReplyB'\n" +
	"\fapi.block.v1P\x01Z\x15block/api/block/v1;v1b\x06proto3"

var (
	file_block_v1_block_proto_rawDescOnce sync.Once
	file_block_v1_block_proto_rawDescData []byte
)

func file_block_v1_block_proto_rawDescGZIP() []byte {
	file_block_v1_block_proto_rawDescOnce.Do(func() {
		file_block_v1_block_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_block_v1_block_proto_rawDesc), len(file_block_v1_block_proto_rawDesc)))
	})
	return file_block_v1_block_proto_rawDescData
}

var file_block_v1_block_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_block_v1_block_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_block_v1_block_proto_goTypes = []any{
	(TransactionStatus)(0),                // 0: api.block.v1.TransactionStatus
	(*NetworkConfigItem)(nil),             // 1: api.block.v1.NetworkConfigItem
	(*NetworkItem)(nil),                   // 2: api.block.v1.NetworkItem
	(*MetadataItem)(nil),                  // 3: api.block.v1.MetadataItem
	(*GetTokenBalanceRequest)(nil),        // 4: api.block.v1.GetTokenBalanceRequest
	(*GetTokenBalanceReply)(nil),          // 5: api.block.v1.GetTokenBalanceReply
	(*GetTokenBalanceBatchRequest)(nil),   // 6: api.block.v1.GetTokenBalanceBatchRequest
	(*GetTokenBalanceBatchReply)(nil),     // 7: api.block.v1.GetTokenBalanceBatchReply
	(*GetTokenInfoRequest)(nil),           // 8: api.block.v1.GetTokenInfoRequest
	(*GetTokenInfoReply)(nil),             // 9: api.block.v1.GetTokenInfoReply
	(*GetTokenInfoBatchRequest)(nil),      // 10: api.block.v1.GetTokenInfoBatchRequest
	(*GetTokenInfoBatchReply)(nil),        // 11: api.block.v1.GetTokenInfoBatchReply
	(*SendTransactionRequest)(nil),        // 12: api.block.v1.SendTransactionRequest
	(*SendTransactionReply)(nil),          // 13: api.block.v1.SendTransactionReply
	(*GetTransactionStatusRequest)(nil),   // 14: api.block.v1.GetTransactionStatusRequest
	(*GetTransactionStatusReply)(nil),     // 15: api.block.v1.GetTransactionStatusReply
	(*GetExplorerURLRequest)(nil),         // 16: api.block.v1.GetExplorerURLRequest
	(*GetExplorerURLReply)(nil),           // 17: api.block.v1.GetExplorerURLReply
	(*ValidateAddressRequest)(nil),        // 18: api.block.v1.ValidateAddressRequest
	(*ValidateAddressReply)(nil),          // 19: api.block.v1.ValidateAddressReply
	(*SubscribeTransactionRequest)(nil),   // 20: api.block.v1.SubscribeTransactionRequest
	(*SubscribeTransactionReply)(nil),     // 21: api.block.v1.SubscribeTransactionReply
	(*SubscribeTransactionItem)(nil),      // 22: api.block.v1.SubscribeTransactionItem
	(*GetTokenPriceRequest)(nil),          // 23: api.block.v1.GetTokenPriceRequest
	(*GetTokenPriceReply)(nil),            // 24: api.block.v1.GetTokenPriceReply
	(*GetTokenPriceBatchRequest)(nil),     // 25: api.block.v1.GetTokenPriceBatchRequest
	(*GetTokenPriceBatchReply)(nil),       // 26: api.block.v1.GetTokenPriceBatchReply
	(*SwapRequest)(nil),                   // 27: api.block.v1.SwapRequest
	(*QuoteRequest)(nil),                  // 28: api.block.v1.QuoteRequest
	(*QuoteReply)(nil),                    // 29: api.block.v1.QuoteReply
	(*SwapFeeItem)(nil),                   // 30: api.block.v1.SwapFeeItem
	(*SwapReply)(nil),                     // 31: api.block.v1.SwapReply
	(*TransferRequest)(nil),               // 32: api.block.v1.TransferRequest
	(*TransferReply)(nil),                 // 33: api.block.v1.TransferReply
	(*TRONResourceDetail)(nil),            // 34: api.block.v1.TRONResourceDetail
	(*ApproveRequest)(nil),                // 35: api.block.v1.ApproveRequest
	(*ApproveReply)(nil),                  // 36: api.block.v1.ApproveReply
	(*CallBundleRequest)(nil),             // 37: api.block.v1.CallBundleRequest
	(*CallBundleReply)(nil),               // 38: api.block.v1.CallBundleReply
	(*SendPrivateTransactionRequest)(nil), // 39: api.block.v1.SendPrivateTransactionRequest
	(*SendPrivateTransactionReply)(nil),   // 40: api.block.v1.SendPrivateTransactionReply
	(*CreateAddressRequest)(nil),          // 41: api.block.v1.CreateAddressRequest
	(*CreateAddressReply)(nil),            // 42: api.block.v1.CreateAddressReply
	(*CreateAddressBatchRequest)(nil),     // 43: api.block.v1.CreateAddressBatchRequest
	(*CreateAddressBatchReply)(nil),       // 44: api.block.v1.CreateAddressBatchReply
	(*GetTransactionByHashRequest)(nil),   // 45: api.block.v1.GetTransactionByHashRequest
	(*GetTransactionByHashReply)(nil),     // 46: api.block.v1.GetTransactionByHashReply
	(*GetLiquidityRequest)(nil),           // 47: api.block.v1.GetLiquidityRequest
	(*GetLiquidityReply)(nil),             // 48: api.block.v1.GetLiquidityReply
	(*GetPendingNonceRequest)(nil),        // 49: api.block.v1.GetPendingNonceRequest
	(*GetPendingNonceReply)(nil),          // 50: api.block.v1.GetPendingNonceReply
	(*GetTokenSecurityRequest)(nil),       // 51: api.block.v1.GetTokenSecurityRequest
	(*GetTokenSecurityReply)(nil),         // 52: api.block.v1.GetTokenSecurityReply
	(*GetTokenMediaRequest)(nil),          // 53: api.block.v1.GetTokenMediaRequest
	(*GetTokenMediaReply)(nil),            // 54: api.block.v1.GetTokenMediaReply
	(*GetTokenPoolInfoRequest)(nil),       // 55: api.block.v1.GetTokenPoolInfoRequest
	(*GetTokenPoolInfoReply)(nil),         // 56: api.block.v1.GetTokenPoolInfoReply
	nil,                                   // 57: api.block.v1.GetTokenBalanceBatchReply.BalanceResultEntry
	nil,                                   // 58: api.block.v1.GetTokenInfoBatchReply.InfoResultEntry
	nil,                                   // 59: api.block.v1.GetTokenPriceBatchReply.PriceResultEntry
	nil,                                   // 60: api.block.v1.CallBundleReply.ErrorsEntry
}
var file_block_v1_block_proto_depIdxs = []int32{
	1,  // 0: api.block.v1.NetworkItem.configs:type_name -> api.block.v1.NetworkConfigItem
	2,  // 1: api.block.v1.MetadataItem.networks:type_name -> api.block.v1.NetworkItem
	4,  // 2: api.block.v1.GetTokenBalanceBatchRequest.balance_items:type_name -> api.block.v1.GetTokenBalanceRequest
	57, // 3: api.block.v1.GetTokenBalanceBatchReply.balance_result:type_name -> api.block.v1.GetTokenBalanceBatchReply.BalanceResultEntry
	8,  // 4: api.block.v1.GetTokenInfoBatchRequest.info_items:type_name -> api.block.v1.GetTokenInfoRequest
	58, // 5: api.block.v1.GetTokenInfoBatchReply.info_result:type_name -> api.block.v1.GetTokenInfoBatchReply.InfoResultEntry
	22, // 6: api.block.v1.SubscribeTransactionReply.transactions:type_name -> api.block.v1.SubscribeTransactionItem
	23, // 7: api.block.v1.GetTokenPriceBatchRequest.price_items:type_name -> api.block.v1.GetTokenPriceRequest
	59, // 8: api.block.v1.GetTokenPriceBatchReply.price_result:type_name -> api.block.v1.GetTokenPriceBatchReply.PriceResultEntry
	30, // 9: api.block.v1.SwapRequest.before_fee:type_name -> api.block.v1.SwapFeeItem
	30, // 10: api.block.v1.SwapRequest.after_fee:type_name -> api.block.v1.SwapFeeItem
	34, // 11: api.block.v1.TransferReply.tron_resource_detail:type_name -> api.block.v1.TRONResourceDetail
	60, // 12: api.block.v1.CallBundleReply.errors:type_name -> api.block.v1.CallBundleReply.ErrorsEntry
	42, // 13: api.block.v1.CreateAddressBatchReply.addresses:type_name -> api.block.v1.CreateAddressReply
	0,  // 14: api.block.v1.GetTransactionByHashReply.status:type_name -> api.block.v1.TransactionStatus
	5,  // 15: api.block.v1.GetTokenBalanceBatchReply.BalanceResultEntry.value:type_name -> api.block.v1.GetTokenBalanceReply
	9,  // 16: api.block.v1.GetTokenInfoBatchReply.InfoResultEntry.value:type_name -> api.block.v1.GetTokenInfoReply
	24, // 17: api.block.v1.GetTokenPriceBatchReply.PriceResultEntry.value:type_name -> api.block.v1.GetTokenPriceReply
	18, // 18: api.block.v1.Block.ValidateAddress:input_type -> api.block.v1.ValidateAddressRequest
	4,  // 19: api.block.v1.Block.GetTokenBalance:input_type -> api.block.v1.GetTokenBalanceRequest
	6,  // 20: api.block.v1.Block.GetTokenBalanceBatch:input_type -> api.block.v1.GetTokenBalanceBatchRequest
	8,  // 21: api.block.v1.Block.GetTokenInfo:input_type -> api.block.v1.GetTokenInfoRequest
	10, // 22: api.block.v1.Block.GetTokenInfoBatch:input_type -> api.block.v1.GetTokenInfoBatchRequest
	23, // 23: api.block.v1.Block.GetTokenPrice:input_type -> api.block.v1.GetTokenPriceRequest
	25, // 24: api.block.v1.Block.GetTokenPriceBatch:input_type -> api.block.v1.GetTokenPriceBatchRequest
	27, // 25: api.block.v1.Block.Swap:input_type -> api.block.v1.SwapRequest
	28, // 26: api.block.v1.Block.Quote:input_type -> api.block.v1.QuoteRequest
	32, // 27: api.block.v1.Block.Transfer:input_type -> api.block.v1.TransferRequest
	35, // 28: api.block.v1.Block.Approve:input_type -> api.block.v1.ApproveRequest
	12, // 29: api.block.v1.Block.SendTransaction:input_type -> api.block.v1.SendTransactionRequest
	39, // 30: api.block.v1.Block.SendPrivateTransaction:input_type -> api.block.v1.SendPrivateTransactionRequest
	41, // 31: api.block.v1.Block.CreateAddress:input_type -> api.block.v1.CreateAddressRequest
	43, // 32: api.block.v1.Block.CreateAddressBatch:input_type -> api.block.v1.CreateAddressBatchRequest
	45, // 33: api.block.v1.Block.GetTransactionByHash:input_type -> api.block.v1.GetTransactionByHashRequest
	47, // 34: api.block.v1.Block.GetLiquidity:input_type -> api.block.v1.GetLiquidityRequest
	49, // 35: api.block.v1.Block.GetPendingNonce:input_type -> api.block.v1.GetPendingNonceRequest
	51, // 36: api.block.v1.Block.GetTokenSecurity:input_type -> api.block.v1.GetTokenSecurityRequest
	53, // 37: api.block.v1.Block.GetTokenMedia:input_type -> api.block.v1.GetTokenMediaRequest
	55, // 38: api.block.v1.Block.GetTokenPoolInfo:input_type -> api.block.v1.GetTokenPoolInfoRequest
	19, // 39: api.block.v1.Block.ValidateAddress:output_type -> api.block.v1.ValidateAddressReply
	5,  // 40: api.block.v1.Block.GetTokenBalance:output_type -> api.block.v1.GetTokenBalanceReply
	7,  // 41: api.block.v1.Block.GetTokenBalanceBatch:output_type -> api.block.v1.GetTokenBalanceBatchReply
	9,  // 42: api.block.v1.Block.GetTokenInfo:output_type -> api.block.v1.GetTokenInfoReply
	11, // 43: api.block.v1.Block.GetTokenInfoBatch:output_type -> api.block.v1.GetTokenInfoBatchReply
	24, // 44: api.block.v1.Block.GetTokenPrice:output_type -> api.block.v1.GetTokenPriceReply
	26, // 45: api.block.v1.Block.GetTokenPriceBatch:output_type -> api.block.v1.GetTokenPriceBatchReply
	31, // 46: api.block.v1.Block.Swap:output_type -> api.block.v1.SwapReply
	29, // 47: api.block.v1.Block.Quote:output_type -> api.block.v1.QuoteReply
	33, // 48: api.block.v1.Block.Transfer:output_type -> api.block.v1.TransferReply
	36, // 49: api.block.v1.Block.Approve:output_type -> api.block.v1.ApproveReply
	13, // 50: api.block.v1.Block.SendTransaction:output_type -> api.block.v1.SendTransactionReply
	40, // 51: api.block.v1.Block.SendPrivateTransaction:output_type -> api.block.v1.SendPrivateTransactionReply
	42, // 52: api.block.v1.Block.CreateAddress:output_type -> api.block.v1.CreateAddressReply
	44, // 53: api.block.v1.Block.CreateAddressBatch:output_type -> api.block.v1.CreateAddressBatchReply
	46, // 54: api.block.v1.Block.GetTransactionByHash:output_type -> api.block.v1.GetTransactionByHashReply
	48, // 55: api.block.v1.Block.GetLiquidity:output_type -> api.block.v1.GetLiquidityReply
	50, // 56: api.block.v1.Block.GetPendingNonce:output_type -> api.block.v1.GetPendingNonceReply
	52, // 57: api.block.v1.Block.GetTokenSecurity:output_type -> api.block.v1.GetTokenSecurityReply
	54, // 58: api.block.v1.Block.GetTokenMedia:output_type -> api.block.v1.GetTokenMediaReply
	56, // 59: api.block.v1.Block.GetTokenPoolInfo:output_type -> api.block.v1.GetTokenPoolInfoReply
	39, // [39:60] is the sub-list for method output_type
	18, // [18:39] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_block_v1_block_proto_init() }
func file_block_v1_block_proto_init() {
	if File_block_v1_block_proto != nil {
		return
	}
	file_block_v1_block_proto_msgTypes[21].OneofWrappers = []any{}
	file_block_v1_block_proto_msgTypes[26].OneofWrappers = []any{}
	file_block_v1_block_proto_msgTypes[31].OneofWrappers = []any{}
	file_block_v1_block_proto_msgTypes[32].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_block_v1_block_proto_rawDesc), len(file_block_v1_block_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_block_v1_block_proto_goTypes,
		DependencyIndexes: file_block_v1_block_proto_depIdxs,
		EnumInfos:         file_block_v1_block_proto_enumTypes,
		MessageInfos:      file_block_v1_block_proto_msgTypes,
	}.Build()
	File_block_v1_block_proto = out.File
	file_block_v1_block_proto_goTypes = nil
	file_block_v1_block_proto_depIdxs = nil
}
