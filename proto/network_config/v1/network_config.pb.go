// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: network_config/v1/network_config.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNetworkConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkConfigRequest) Reset() {
	*x = CreateNetworkConfigRequest{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkConfigRequest) ProtoMessage() {}

func (x *CreateNetworkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateNetworkConfigRequest) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{0}
}

type CreateNetworkConfigReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkConfigReply) Reset() {
	*x = CreateNetworkConfigReply{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkConfigReply) ProtoMessage() {}

func (x *CreateNetworkConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkConfigReply.ProtoReflect.Descriptor instead.
func (*CreateNetworkConfigReply) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{1}
}

type UpdateNetworkConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNetworkConfigRequest) Reset() {
	*x = UpdateNetworkConfigRequest{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNetworkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkConfigRequest) ProtoMessage() {}

func (x *UpdateNetworkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNetworkConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateNetworkConfigRequest) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{2}
}

type UpdateNetworkConfigReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNetworkConfigReply) Reset() {
	*x = UpdateNetworkConfigReply{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNetworkConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkConfigReply) ProtoMessage() {}

func (x *UpdateNetworkConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNetworkConfigReply.ProtoReflect.Descriptor instead.
func (*UpdateNetworkConfigReply) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{3}
}

type DeleteNetworkConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNetworkConfigRequest) Reset() {
	*x = DeleteNetworkConfigRequest{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkConfigRequest) ProtoMessage() {}

func (x *DeleteNetworkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworkConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteNetworkConfigRequest) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{4}
}

type DeleteNetworkConfigReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNetworkConfigReply) Reset() {
	*x = DeleteNetworkConfigReply{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkConfigReply) ProtoMessage() {}

func (x *DeleteNetworkConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworkConfigReply.ProtoReflect.Descriptor instead.
func (*DeleteNetworkConfigReply) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{5}
}

type GetNetworkConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkConfigRequest) Reset() {
	*x = GetNetworkConfigRequest{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkConfigRequest) ProtoMessage() {}

func (x *GetNetworkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkConfigRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkConfigRequest) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{6}
}

type GetNetworkConfigReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkConfigReply) Reset() {
	*x = GetNetworkConfigReply{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkConfigReply) ProtoMessage() {}

func (x *GetNetworkConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkConfigReply.ProtoReflect.Descriptor instead.
func (*GetNetworkConfigReply) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{7}
}

type ListNetworkConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworkConfigRequest) Reset() {
	*x = ListNetworkConfigRequest{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkConfigRequest) ProtoMessage() {}

func (x *ListNetworkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkConfigRequest.ProtoReflect.Descriptor instead.
func (*ListNetworkConfigRequest) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{8}
}

type ListNetworkConfigReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NetworkConfigs []*NetworkConfigItem   `protobuf:"bytes,1,rep,name=network_configs,json=networkConfigs,proto3" json:"network_configs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListNetworkConfigReply) Reset() {
	*x = ListNetworkConfigReply{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkConfigReply) ProtoMessage() {}

func (x *ListNetworkConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkConfigReply.ProtoReflect.Descriptor instead.
func (*ListNetworkConfigReply) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{9}
}

func (x *ListNetworkConfigReply) GetNetworkConfigs() []*NetworkConfigItem {
	if x != nil {
		return x.NetworkConfigs
	}
	return nil
}

type ListNetworkConfigByNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     int64                  `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworkConfigByNetworkRequest) Reset() {
	*x = ListNetworkConfigByNetworkRequest{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkConfigByNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkConfigByNetworkRequest) ProtoMessage() {}

func (x *ListNetworkConfigByNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkConfigByNetworkRequest.ProtoReflect.Descriptor instead.
func (*ListNetworkConfigByNetworkRequest) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{10}
}

func (x *ListNetworkConfigByNetworkRequest) GetNetworkId() int64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

type ListNetworkConfigByNetworkReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NetworkConfigs []*NetworkConfigItem   `protobuf:"bytes,1,rep,name=network_configs,json=networkConfigs,proto3" json:"network_configs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListNetworkConfigByNetworkReply) Reset() {
	*x = ListNetworkConfigByNetworkReply{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkConfigByNetworkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkConfigByNetworkReply) ProtoMessage() {}

func (x *ListNetworkConfigByNetworkReply) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkConfigByNetworkReply.ProtoReflect.Descriptor instead.
func (*ListNetworkConfigByNetworkReply) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{11}
}

func (x *ListNetworkConfigByNetworkReply) GetNetworkConfigs() []*NetworkConfigItem {
	if x != nil {
		return x.NetworkConfigs
	}
	return nil
}

type NetworkConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol        string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ChainId       int64                  `protobuf:"varint,4,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	NetworkId     int64                  `protobuf:"varint,5,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfigItem) Reset() {
	*x = NetworkConfigItem{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfigItem) ProtoMessage() {}

func (x *NetworkConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfigItem.ProtoReflect.Descriptor instead.
func (*NetworkConfigItem) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{12}
}

func (x *NetworkConfigItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NetworkConfigItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkConfigItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NetworkConfigItem) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *NetworkConfigItem) GetNetworkId() int64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

type ListNetworkConfigByNetworkAndChainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     int64                  `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	ChainId       int64                  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworkConfigByNetworkAndChainRequest) Reset() {
	*x = ListNetworkConfigByNetworkAndChainRequest{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkConfigByNetworkAndChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkConfigByNetworkAndChainRequest) ProtoMessage() {}

func (x *ListNetworkConfigByNetworkAndChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkConfigByNetworkAndChainRequest.ProtoReflect.Descriptor instead.
func (*ListNetworkConfigByNetworkAndChainRequest) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{13}
}

func (x *ListNetworkConfigByNetworkAndChainRequest) GetNetworkId() int64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *ListNetworkConfigByNetworkAndChainRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type ListNetworkConfigByNetworkAndChainReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NetworkConfigs []*NetworkConfigItem   `protobuf:"bytes,1,rep,name=network_configs,json=networkConfigs,proto3" json:"network_configs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListNetworkConfigByNetworkAndChainReply) Reset() {
	*x = ListNetworkConfigByNetworkAndChainReply{}
	mi := &file_network_config_v1_network_config_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworkConfigByNetworkAndChainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkConfigByNetworkAndChainReply) ProtoMessage() {}

func (x *ListNetworkConfigByNetworkAndChainReply) ProtoReflect() protoreflect.Message {
	mi := &file_network_config_v1_network_config_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkConfigByNetworkAndChainReply.ProtoReflect.Descriptor instead.
func (*ListNetworkConfigByNetworkAndChainReply) Descriptor() ([]byte, []int) {
	return file_network_config_v1_network_config_proto_rawDescGZIP(), []int{14}
}

func (x *ListNetworkConfigByNetworkAndChainReply) GetNetworkConfigs() []*NetworkConfigItem {
	if x != nil {
		return x.NetworkConfigs
	}
	return nil
}

var File_network_config_v1_network_config_proto protoreflect.FileDescriptor

var file_network_config_v1_network_config_proto_rawDesc = string([]byte{
	0x0a, 0x26, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x22,
	0x1c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x51, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x42, 0x0a, 0x21, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0x74,
	0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x51, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64,
	0x22, 0x65, 0x0a, 0x29, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x51, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x32, 0xa1, 0x07, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x79, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x79, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x79, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x73, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x8e, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x38,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0xa6, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x40, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x39, 0x0a, 0x15, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x1e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_network_config_v1_network_config_proto_rawDescOnce sync.Once
	file_network_config_v1_network_config_proto_rawDescData []byte
)

func file_network_config_v1_network_config_proto_rawDescGZIP() []byte {
	file_network_config_v1_network_config_proto_rawDescOnce.Do(func() {
		file_network_config_v1_network_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_network_config_v1_network_config_proto_rawDesc), len(file_network_config_v1_network_config_proto_rawDesc)))
	})
	return file_network_config_v1_network_config_proto_rawDescData
}

var file_network_config_v1_network_config_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_network_config_v1_network_config_proto_goTypes = []any{
	(*CreateNetworkConfigRequest)(nil),                // 0: api.network_config.v1.CreateNetworkConfigRequest
	(*CreateNetworkConfigReply)(nil),                  // 1: api.network_config.v1.CreateNetworkConfigReply
	(*UpdateNetworkConfigRequest)(nil),                // 2: api.network_config.v1.UpdateNetworkConfigRequest
	(*UpdateNetworkConfigReply)(nil),                  // 3: api.network_config.v1.UpdateNetworkConfigReply
	(*DeleteNetworkConfigRequest)(nil),                // 4: api.network_config.v1.DeleteNetworkConfigRequest
	(*DeleteNetworkConfigReply)(nil),                  // 5: api.network_config.v1.DeleteNetworkConfigReply
	(*GetNetworkConfigRequest)(nil),                   // 6: api.network_config.v1.GetNetworkConfigRequest
	(*GetNetworkConfigReply)(nil),                     // 7: api.network_config.v1.GetNetworkConfigReply
	(*ListNetworkConfigRequest)(nil),                  // 8: api.network_config.v1.ListNetworkConfigRequest
	(*ListNetworkConfigReply)(nil),                    // 9: api.network_config.v1.ListNetworkConfigReply
	(*ListNetworkConfigByNetworkRequest)(nil),         // 10: api.network_config.v1.ListNetworkConfigByNetworkRequest
	(*ListNetworkConfigByNetworkReply)(nil),           // 11: api.network_config.v1.ListNetworkConfigByNetworkReply
	(*NetworkConfigItem)(nil),                         // 12: api.network_config.v1.NetworkConfigItem
	(*ListNetworkConfigByNetworkAndChainRequest)(nil), // 13: api.network_config.v1.ListNetworkConfigByNetworkAndChainRequest
	(*ListNetworkConfigByNetworkAndChainReply)(nil),   // 14: api.network_config.v1.ListNetworkConfigByNetworkAndChainReply
}
var file_network_config_v1_network_config_proto_depIdxs = []int32{
	12, // 0: api.network_config.v1.ListNetworkConfigReply.network_configs:type_name -> api.network_config.v1.NetworkConfigItem
	12, // 1: api.network_config.v1.ListNetworkConfigByNetworkReply.network_configs:type_name -> api.network_config.v1.NetworkConfigItem
	12, // 2: api.network_config.v1.ListNetworkConfigByNetworkAndChainReply.network_configs:type_name -> api.network_config.v1.NetworkConfigItem
	0,  // 3: api.network_config.v1.NetworkConfig.CreateNetworkConfig:input_type -> api.network_config.v1.CreateNetworkConfigRequest
	2,  // 4: api.network_config.v1.NetworkConfig.UpdateNetworkConfig:input_type -> api.network_config.v1.UpdateNetworkConfigRequest
	4,  // 5: api.network_config.v1.NetworkConfig.DeleteNetworkConfig:input_type -> api.network_config.v1.DeleteNetworkConfigRequest
	6,  // 6: api.network_config.v1.NetworkConfig.GetNetworkConfig:input_type -> api.network_config.v1.GetNetworkConfigRequest
	8,  // 7: api.network_config.v1.NetworkConfig.ListNetworkConfig:input_type -> api.network_config.v1.ListNetworkConfigRequest
	10, // 8: api.network_config.v1.NetworkConfig.ListNetworkConfigByNetwork:input_type -> api.network_config.v1.ListNetworkConfigByNetworkRequest
	13, // 9: api.network_config.v1.NetworkConfig.ListNetworkConfigByNetworkAndChain:input_type -> api.network_config.v1.ListNetworkConfigByNetworkAndChainRequest
	1,  // 10: api.network_config.v1.NetworkConfig.CreateNetworkConfig:output_type -> api.network_config.v1.CreateNetworkConfigReply
	3,  // 11: api.network_config.v1.NetworkConfig.UpdateNetworkConfig:output_type -> api.network_config.v1.UpdateNetworkConfigReply
	5,  // 12: api.network_config.v1.NetworkConfig.DeleteNetworkConfig:output_type -> api.network_config.v1.DeleteNetworkConfigReply
	7,  // 13: api.network_config.v1.NetworkConfig.GetNetworkConfig:output_type -> api.network_config.v1.GetNetworkConfigReply
	9,  // 14: api.network_config.v1.NetworkConfig.ListNetworkConfig:output_type -> api.network_config.v1.ListNetworkConfigReply
	11, // 15: api.network_config.v1.NetworkConfig.ListNetworkConfigByNetwork:output_type -> api.network_config.v1.ListNetworkConfigByNetworkReply
	14, // 16: api.network_config.v1.NetworkConfig.ListNetworkConfigByNetworkAndChain:output_type -> api.network_config.v1.ListNetworkConfigByNetworkAndChainReply
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_network_config_v1_network_config_proto_init() }
func file_network_config_v1_network_config_proto_init() {
	if File_network_config_v1_network_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_network_config_v1_network_config_proto_rawDesc), len(file_network_config_v1_network_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_network_config_v1_network_config_proto_goTypes,
		DependencyIndexes: file_network_config_v1_network_config_proto_depIdxs,
		MessageInfos:      file_network_config_v1_network_config_proto_msgTypes,
	}.Build()
	File_network_config_v1_network_config_proto = out.File
	file_network_config_v1_network_config_proto_goTypes = nil
	file_network_config_v1_network_config_proto_depIdxs = nil
}
