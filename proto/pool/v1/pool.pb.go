// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: pool/v1/pool.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	MintAddress   string                 `protobuf:"bytes,2,opt,name=mint_address,json=mintAddress,proto3" json:"mint_address,omitempty"`
	PoolAddress   string                 `protobuf:"bytes,3,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	mi := &file_pool_v1_pool_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *TransactionRequest) GetMintAddress() string {
	if x != nil {
		return x.MintAddress
	}
	return ""
}

func (x *TransactionRequest) GetPoolAddress() string {
	if x != nil {
		return x.PoolAddress
	}
	return ""
}

// Transaction相关消息
type TransactionReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 基本信息
	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Signer    string `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix时间戳
	Slot      uint64 `protobuf:"varint,4,opt,name=slot,proto3" json:"slot,omitempty"`
	// 交易相关
	TradeType         int32  `protobuf:"varint,5,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`                          // 1=买入, 2=卖出
	ActualSolAmount   string `protobuf:"bytes,6,opt,name=actual_sol_amount,json=actualSolAmount,proto3" json:"actual_sol_amount,omitempty"`       // 使用字符串表示大数
	ActualTokenAmount string `protobuf:"bytes,7,opt,name=actual_token_amount,json=actualTokenAmount,proto3" json:"actual_token_amount,omitempty"` // 使用字符串表示大数
	// 地址信息
	PoolAddress string `protobuf:"bytes,8,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
	TokenMint   string `protobuf:"bytes,9,opt,name=token_mint,json=tokenMint,proto3" json:"token_mint,omitempty"`
	User        string `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	// PumpFun专用数据
	PumpModel     *PumpModel `protobuf:"bytes,11,opt,name=pump_model,json=pumpModel,proto3" json:"pump_model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionReply) Reset() {
	*x = TransactionReply{}
	mi := &file_pool_v1_pool_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReply) ProtoMessage() {}

func (x *TransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReply.ProtoReflect.Descriptor instead.
func (*TransactionReply) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionReply) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *TransactionReply) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *TransactionReply) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionReply) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *TransactionReply) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *TransactionReply) GetActualSolAmount() string {
	if x != nil {
		return x.ActualSolAmount
	}
	return ""
}

func (x *TransactionReply) GetActualTokenAmount() string {
	if x != nil {
		return x.ActualTokenAmount
	}
	return ""
}

func (x *TransactionReply) GetPoolAddress() string {
	if x != nil {
		return x.PoolAddress
	}
	return ""
}

func (x *TransactionReply) GetTokenMint() string {
	if x != nil {
		return x.TokenMint
	}
	return ""
}

func (x *TransactionReply) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TransactionReply) GetPumpModel() *PumpModel {
	if x != nil {
		return x.PumpModel
	}
	return nil
}

type PumpModel struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	RealSolReserves      string                 `protobuf:"bytes,1,opt,name=real_sol_reserves,json=realSolReserves,proto3" json:"real_sol_reserves,omitempty"`                // 真实SOL储备量
	RealTokenReserves    string                 `protobuf:"bytes,2,opt,name=real_token_reserves,json=realTokenReserves,proto3" json:"real_token_reserves,omitempty"`          // 真实Token储备量
	VirtualSolReserves   string                 `protobuf:"bytes,3,opt,name=virtual_sol_reserves,json=virtualSolReserves,proto3" json:"virtual_sol_reserves,omitempty"`       // 虚拟SOL储备量
	VirtualTokenReserves string                 `protobuf:"bytes,4,opt,name=virtual_token_reserves,json=virtualTokenReserves,proto3" json:"virtual_token_reserves,omitempty"` // 虚拟Token储备量
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PumpModel) Reset() {
	*x = PumpModel{}
	mi := &file_pool_v1_pool_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PumpModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PumpModel) ProtoMessage() {}

func (x *PumpModel) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PumpModel.ProtoReflect.Descriptor instead.
func (*PumpModel) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{2}
}

func (x *PumpModel) GetRealSolReserves() string {
	if x != nil {
		return x.RealSolReserves
	}
	return ""
}

func (x *PumpModel) GetRealTokenReserves() string {
	if x != nil {
		return x.RealTokenReserves
	}
	return ""
}

func (x *PumpModel) GetVirtualSolReserves() string {
	if x != nil {
		return x.VirtualSolReserves
	}
	return ""
}

func (x *PumpModel) GetVirtualTokenReserves() string {
	if x != nil {
		return x.VirtualTokenReserves
	}
	return ""
}

var File_pool_v1_pool_proto protoreflect.FileDescriptor

const file_pool_v1_pool_proto_rawDesc = "" +
	"\n" +
	"\x12pool/v1/pool.proto\x12\apool.v1\"p\n" +
	"\x12TransactionRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12!\n" +
	"\fmint_address\x18\x02 \x01(\tR\vmintAddress\x12!\n" +
	"\fpool_address\x18\x03 \x01(\tR\vpoolAddress\"\xfe\x02\n" +
	"\x10TransactionReply\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\tR\tsignature\x12\x16\n" +
	"\x06signer\x18\x02 \x01(\tR\x06signer\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x12\n" +
	"\x04slot\x18\x04 \x01(\x04R\x04slot\x12\x1d\n" +
	"\n" +
	"trade_type\x18\x05 \x01(\x05R\ttradeType\x12*\n" +
	"\x11actual_sol_amount\x18\x06 \x01(\tR\x0factualSolAmount\x12.\n" +
	"\x13actual_token_amount\x18\a \x01(\tR\x11actualTokenAmount\x12!\n" +
	"\fpool_address\x18\b \x01(\tR\vpoolAddress\x12\x1d\n" +
	"\n" +
	"token_mint\x18\t \x01(\tR\ttokenMint\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\x121\n" +
	"\n" +
	"pump_model\x18\v \x01(\v2\x12.pool.v1.PumpModelR\tpumpModel\"\xcf\x01\n" +
	"\tPumpModel\x12*\n" +
	"\x11real_sol_reserves\x18\x01 \x01(\tR\x0frealSolReserves\x12.\n" +
	"\x13real_token_reserves\x18\x02 \x01(\tR\x11realTokenReserves\x120\n" +
	"\x14virtual_sol_reserves\x18\x03 \x01(\tR\x12virtualSolReserves\x124\n" +
	"\x16virtual_token_reserves\x18\x04 \x01(\tR\x14virtualTokenReserves2]\n" +
	"\x04Pool\x12U\n" +
	"\x15SubscribeTransactions\x12\x1b.pool.v1.TransactionRequest\x1a\x19.pool.v1.TransactionReply\"\x00(\x010\x01BH\n" +
	"\x16dev.kratos.api.pool.v1B\vPoolProtoV1P\x01Z\x1freef_sub_service/api/pool/v1;v1b\x06proto3"

var (
	file_pool_v1_pool_proto_rawDescOnce sync.Once
	file_pool_v1_pool_proto_rawDescData []byte
)

func file_pool_v1_pool_proto_rawDescGZIP() []byte {
	file_pool_v1_pool_proto_rawDescOnce.Do(func() {
		file_pool_v1_pool_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pool_v1_pool_proto_rawDesc), len(file_pool_v1_pool_proto_rawDesc)))
	})
	return file_pool_v1_pool_proto_rawDescData
}

var file_pool_v1_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pool_v1_pool_proto_goTypes = []any{
	(*TransactionRequest)(nil), // 0: pool.v1.TransactionRequest
	(*TransactionReply)(nil),   // 1: pool.v1.TransactionReply
	(*PumpModel)(nil),          // 2: pool.v1.PumpModel
}
var file_pool_v1_pool_proto_depIdxs = []int32{
	2, // 0: pool.v1.TransactionReply.pump_model:type_name -> pool.v1.PumpModel
	0, // 1: pool.v1.Pool.SubscribeTransactions:input_type -> pool.v1.TransactionRequest
	1, // 2: pool.v1.Pool.SubscribeTransactions:output_type -> pool.v1.TransactionReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pool_v1_pool_proto_init() }
func file_pool_v1_pool_proto_init() {
	if File_pool_v1_pool_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pool_v1_pool_proto_rawDesc), len(file_pool_v1_pool_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pool_v1_pool_proto_goTypes,
		DependencyIndexes: file_pool_v1_pool_proto_depIdxs,
		MessageInfos:      file_pool_v1_pool_proto_msgTypes,
	}.Build()
	File_pool_v1_pool_proto = out.File
	file_pool_v1_pool_proto_goTypes = nil
	file_pool_v1_pool_proto_depIdxs = nil
}
