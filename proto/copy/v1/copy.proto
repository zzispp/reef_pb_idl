syntax = "proto3";

package api.copy.v1;

option go_package = "block/api/copy/v1;v1";
option java_multiple_files = true;
option java_package = "api.copy.v1";

service CopyTradeService {
    rpc CreateCopyOrder (CreateCopyOrderRequest) returns (CreateCopyOrderReply);
}

// 买入策略
message BuyStrategy {
    string min_amount = 1; // 最小买入金额(带精度)
    string max_amount = 2; // 最大买入金额(带精度)
    uint32 strategy = 3; // 策略类型: 0是固定 1是百分比
    string strategy_value = 4; // 策略值：固定金额或百分比
    double slippage_tolerance = 5; // 滑点容忍度
}

// 跟单条件
message CopyConditions {
    optional string min_pool_size = 1; // 最小池子大小(k)
    optional string max_pool_size = 2; // 最大池子大小(k)
    optional string min_buy_amount = 3; // 目标地址最小买入金额(带精度)
    optional string max_buy_amount = 4; // 目标地址最大买入金额(带精度)
    optional string min_market_cap = 5; // 最小市值(k)
    optional string max_market_cap = 6; // 最大市值(k)
}

message CreateCopyOrderRequest {
    string chain = 1; // 链
    string user_address = 2; // 用户地址
    string target_address = 3; // 目标地址
    string private_key = 4; // 用户私钥
    string biz_order_id = 5; // 业务订单id
    
    // 买入策略
    optional BuyStrategy buy_strategy = 6;
    
    // 跟单条件
    optional CopyConditions copy_conditions = 7;
    
    // 过期时间 (Unix时间戳)
    int64 expire_time = 8;
}

message CreateCopyOrderReply {
    string order_id = 1;
}