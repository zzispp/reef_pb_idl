// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: copy/v1/copy.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 交易类型
type TradeType int32

const (
	TradeType_TRADE_TYPE_UNSPECIFIED TradeType = 0
	TradeType_TRADE_TYPE_BUY         TradeType = 1 // 买入
	TradeType_TRADE_TYPE_SELL        TradeType = 2 // 卖出
)

// Enum value maps for TradeType.
var (
	TradeType_name = map[int32]string{
		0: "TRADE_TYPE_UNSPECIFIED",
		1: "TRADE_TYPE_BUY",
		2: "TRADE_TYPE_SELL",
	}
	TradeType_value = map[string]int32{
		"TRADE_TYPE_UNSPECIFIED": 0,
		"TRADE_TYPE_BUY":         1,
		"TRADE_TYPE_SELL":        2,
	}
)

func (x TradeType) Enum() *TradeType {
	p := new(TradeType)
	*p = x
	return p
}

func (x TradeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TradeType) Descriptor() protoreflect.EnumDescriptor {
	return file_copy_v1_copy_proto_enumTypes[0].Descriptor()
}

func (TradeType) Type() protoreflect.EnumType {
	return &file_copy_v1_copy_proto_enumTypes[0]
}

func (x TradeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TradeType.Descriptor instead.
func (TradeType) EnumDescriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{0}
}

// 买入策略
type BuyStrategy struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MinAmount         string                 `protobuf:"bytes,1,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`                           // 最小买入金额(带精度)
	MaxAmount         string                 `protobuf:"bytes,2,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`                           // 最大买入金额(带精度)
	Strategy          uint32                 `protobuf:"varint,3,opt,name=strategy,proto3" json:"strategy,omitempty"`                                             // 策略类型: 0是固定 1是百分比
	StrategyValue     string                 `protobuf:"bytes,4,opt,name=strategy_value,json=strategyValue,proto3" json:"strategy_value,omitempty"`               // 策略值：固定金额或百分比
	SlippageTolerance float64                `protobuf:"fixed64,5,opt,name=slippage_tolerance,json=slippageTolerance,proto3" json:"slippage_tolerance,omitempty"` // 滑点容忍度
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BuyStrategy) Reset() {
	*x = BuyStrategy{}
	mi := &file_copy_v1_copy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyStrategy) ProtoMessage() {}

func (x *BuyStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyStrategy.ProtoReflect.Descriptor instead.
func (*BuyStrategy) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{0}
}

func (x *BuyStrategy) GetMinAmount() string {
	if x != nil {
		return x.MinAmount
	}
	return ""
}

func (x *BuyStrategy) GetMaxAmount() string {
	if x != nil {
		return x.MaxAmount
	}
	return ""
}

func (x *BuyStrategy) GetStrategy() uint32 {
	if x != nil {
		return x.Strategy
	}
	return 0
}

func (x *BuyStrategy) GetStrategyValue() string {
	if x != nil {
		return x.StrategyValue
	}
	return ""
}

func (x *BuyStrategy) GetSlippageTolerance() float64 {
	if x != nil {
		return x.SlippageTolerance
	}
	return 0
}

// 卖出策略
type SellStrategy struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Percentage        float64                `protobuf:"fixed64,1,opt,name=percentage,proto3" json:"percentage,omitempty"`                                        // 卖出百分比
	SlippageTolerance float64                `protobuf:"fixed64,2,opt,name=slippage_tolerance,json=slippageTolerance,proto3" json:"slippage_tolerance,omitempty"` // 滑点容忍度
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SellStrategy) Reset() {
	*x = SellStrategy{}
	mi := &file_copy_v1_copy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SellStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellStrategy) ProtoMessage() {}

func (x *SellStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellStrategy.ProtoReflect.Descriptor instead.
func (*SellStrategy) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{1}
}

func (x *SellStrategy) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *SellStrategy) GetSlippageTolerance() float64 {
	if x != nil {
		return x.SlippageTolerance
	}
	return 0
}

// 跟单条件
type CopyConditions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinPoolSize   *string                `protobuf:"bytes,1,opt,name=min_pool_size,json=minPoolSize,proto3,oneof" json:"min_pool_size,omitempty"`    // 最小池子大小(k)
	MaxPoolSize   *string                `protobuf:"bytes,2,opt,name=max_pool_size,json=maxPoolSize,proto3,oneof" json:"max_pool_size,omitempty"`    // 最大池子大小(k)
	MinBuyAmount  *string                `protobuf:"bytes,3,opt,name=min_buy_amount,json=minBuyAmount,proto3,oneof" json:"min_buy_amount,omitempty"` // 目标地址最小买入金额(带精度)
	MaxBuyAmount  *string                `protobuf:"bytes,4,opt,name=max_buy_amount,json=maxBuyAmount,proto3,oneof" json:"max_buy_amount,omitempty"` // 目标地址最大买入金额(带精度)
	MinMarketCap  *string                `protobuf:"bytes,5,opt,name=min_market_cap,json=minMarketCap,proto3,oneof" json:"min_market_cap,omitempty"` // 最小市值(k)
	MaxMarketCap  *string                `protobuf:"bytes,6,opt,name=max_market_cap,json=maxMarketCap,proto3,oneof" json:"max_market_cap,omitempty"` // 最大市值(k)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyConditions) Reset() {
	*x = CopyConditions{}
	mi := &file_copy_v1_copy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyConditions) ProtoMessage() {}

func (x *CopyConditions) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyConditions.ProtoReflect.Descriptor instead.
func (*CopyConditions) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{2}
}

func (x *CopyConditions) GetMinPoolSize() string {
	if x != nil && x.MinPoolSize != nil {
		return *x.MinPoolSize
	}
	return ""
}

func (x *CopyConditions) GetMaxPoolSize() string {
	if x != nil && x.MaxPoolSize != nil {
		return *x.MaxPoolSize
	}
	return ""
}

func (x *CopyConditions) GetMinBuyAmount() string {
	if x != nil && x.MinBuyAmount != nil {
		return *x.MinBuyAmount
	}
	return ""
}

func (x *CopyConditions) GetMaxBuyAmount() string {
	if x != nil && x.MaxBuyAmount != nil {
		return *x.MaxBuyAmount
	}
	return ""
}

func (x *CopyConditions) GetMinMarketCap() string {
	if x != nil && x.MinMarketCap != nil {
		return *x.MinMarketCap
	}
	return ""
}

func (x *CopyConditions) GetMaxMarketCap() string {
	if x != nil && x.MaxMarketCap != nil {
		return *x.MaxMarketCap
	}
	return ""
}

type CreateCopyOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                      // 链
	UserAddress   string                 `protobuf:"bytes,2,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`       // 用户地址
	TargetAddress string                 `protobuf:"bytes,3,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"` // 目标地址
	PrivateKey    string                 `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`          // 用户私钥
	BizOrderId    string                 `protobuf:"bytes,5,opt,name=biz_order_id,json=bizOrderId,proto3" json:"biz_order_id,omitempty"`        // 业务订单id
	BizUserId     string                 `protobuf:"bytes,6,opt,name=biz_user_id,json=bizUserId,proto3" json:"biz_user_id,omitempty"`           // 业务用户id
	// 交易类型
	TradeType TradeType `protobuf:"varint,7,opt,name=trade_type,json=tradeType,proto3,enum=api.copy.v1.TradeType" json:"trade_type,omitempty"`
	// 买入策略 (当trade_type包含买入时必填)
	BuyStrategy *BuyStrategy `protobuf:"bytes,8,opt,name=buy_strategy,json=buyStrategy,proto3,oneof" json:"buy_strategy,omitempty"`
	// 卖出策略 (当trade_type包含卖出时必填)
	SellStrategy *SellStrategy `protobuf:"bytes,9,opt,name=sell_strategy,json=sellStrategy,proto3,oneof" json:"sell_strategy,omitempty"`
	// 跟单条件
	CopyConditions *CopyConditions `protobuf:"bytes,10,opt,name=copy_conditions,json=copyConditions,proto3,oneof" json:"copy_conditions,omitempty"`
	// 过期时间 (Unix时间戳)
	ExpireTime    int64 `protobuf:"varint,11,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCopyOrderRequest) Reset() {
	*x = CreateCopyOrderRequest{}
	mi := &file_copy_v1_copy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCopyOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCopyOrderRequest) ProtoMessage() {}

func (x *CreateCopyOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCopyOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateCopyOrderRequest) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCopyOrderRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CreateCopyOrderRequest) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *CreateCopyOrderRequest) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *CreateCopyOrderRequest) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *CreateCopyOrderRequest) GetBizOrderId() string {
	if x != nil {
		return x.BizOrderId
	}
	return ""
}

func (x *CreateCopyOrderRequest) GetBizUserId() string {
	if x != nil {
		return x.BizUserId
	}
	return ""
}

func (x *CreateCopyOrderRequest) GetTradeType() TradeType {
	if x != nil {
		return x.TradeType
	}
	return TradeType_TRADE_TYPE_UNSPECIFIED
}

func (x *CreateCopyOrderRequest) GetBuyStrategy() *BuyStrategy {
	if x != nil {
		return x.BuyStrategy
	}
	return nil
}

func (x *CreateCopyOrderRequest) GetSellStrategy() *SellStrategy {
	if x != nil {
		return x.SellStrategy
	}
	return nil
}

func (x *CreateCopyOrderRequest) GetCopyConditions() *CopyConditions {
	if x != nil {
		return x.CopyConditions
	}
	return nil
}

func (x *CreateCopyOrderRequest) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type CreateCopyOrderReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCopyOrderReply) Reset() {
	*x = CreateCopyOrderReply{}
	mi := &file_copy_v1_copy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCopyOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCopyOrderReply) ProtoMessage() {}

func (x *CreateCopyOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCopyOrderReply.ProtoReflect.Descriptor instead.
func (*CreateCopyOrderReply) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCopyOrderReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetCopyOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCopyOrderRequest) Reset() {
	*x = GetCopyOrderRequest{}
	mi := &file_copy_v1_copy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCopyOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCopyOrderRequest) ProtoMessage() {}

func (x *GetCopyOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCopyOrderRequest.ProtoReflect.Descriptor instead.
func (*GetCopyOrderRequest) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{5}
}

func (x *GetCopyOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetCopyOrderReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrderId        string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                   // 订单ID
	Chain          string                 `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`                                                      // 链
	UserAddress    string                 `protobuf:"bytes,3,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`                       // 用户地址
	TargetAddress  string                 `protobuf:"bytes,4,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`                 // 目标地址
	BizOrderId     string                 `protobuf:"bytes,5,opt,name=biz_order_id,json=bizOrderId,proto3" json:"biz_order_id,omitempty"`                        // 业务订单id
	TradeType      TradeType              `protobuf:"varint,6,opt,name=trade_type,json=tradeType,proto3,enum=api.copy.v1.TradeType" json:"trade_type,omitempty"` // 交易类型
	BuyStrategy    *BuyStrategy           `protobuf:"bytes,7,opt,name=buy_strategy,json=buyStrategy,proto3,oneof" json:"buy_strategy,omitempty"`                 // 买入策略
	SellStrategy   *SellStrategy          `protobuf:"bytes,8,opt,name=sell_strategy,json=sellStrategy,proto3,oneof" json:"sell_strategy,omitempty"`              // 卖出策略
	CopyConditions *CopyConditions        `protobuf:"bytes,9,opt,name=copy_conditions,json=copyConditions,proto3,oneof" json:"copy_conditions,omitempty"`        // 跟单条件
	ExpireTime     int64                  `protobuf:"varint,10,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`                        // 过期时间
	Status         uint64                 `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`                                                  // 状态
	Message        string                 `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`                                                 // 消息
	CreatedAt      string                 `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                            // 创建时间
	UpdatedAt      string                 `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                            // 更新时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetCopyOrderReply) Reset() {
	*x = GetCopyOrderReply{}
	mi := &file_copy_v1_copy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCopyOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCopyOrderReply) ProtoMessage() {}

func (x *GetCopyOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCopyOrderReply.ProtoReflect.Descriptor instead.
func (*GetCopyOrderReply) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{6}
}

func (x *GetCopyOrderReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetCopyOrderReply) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetCopyOrderReply) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *GetCopyOrderReply) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *GetCopyOrderReply) GetBizOrderId() string {
	if x != nil {
		return x.BizOrderId
	}
	return ""
}

func (x *GetCopyOrderReply) GetTradeType() TradeType {
	if x != nil {
		return x.TradeType
	}
	return TradeType_TRADE_TYPE_UNSPECIFIED
}

func (x *GetCopyOrderReply) GetBuyStrategy() *BuyStrategy {
	if x != nil {
		return x.BuyStrategy
	}
	return nil
}

func (x *GetCopyOrderReply) GetSellStrategy() *SellStrategy {
	if x != nil {
		return x.SellStrategy
	}
	return nil
}

func (x *GetCopyOrderReply) GetCopyConditions() *CopyConditions {
	if x != nil {
		return x.CopyConditions
	}
	return nil
}

func (x *GetCopyOrderReply) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *GetCopyOrderReply) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCopyOrderReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCopyOrderReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetCopyOrderReply) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetCopyOrderListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserAddress   string                 `protobuf:"bytes,1,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`       // 用户地址
	TargetAddress string                 `protobuf:"bytes,2,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"` // 目标地址
	BizUserId     string                 `protobuf:"bytes,3,opt,name=biz_user_id,json=bizUserId,proto3" json:"biz_user_id,omitempty"`           // 业务用户id
	Chain         string                 `protobuf:"bytes,4,opt,name=chain,proto3" json:"chain,omitempty"`                                      // 链
	BizOrderId    string                 `protobuf:"bytes,5,opt,name=biz_order_id,json=bizOrderId,proto3" json:"biz_order_id,omitempty"`        // 业务订单id
	Page          int32                  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`                                       // 页码，从1开始，默认为1
	PageSize      int32                  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`               // 页大小，默认为20，最大100
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCopyOrderListRequest) Reset() {
	*x = GetCopyOrderListRequest{}
	mi := &file_copy_v1_copy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCopyOrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCopyOrderListRequest) ProtoMessage() {}

func (x *GetCopyOrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCopyOrderListRequest.ProtoReflect.Descriptor instead.
func (*GetCopyOrderListRequest) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{7}
}

func (x *GetCopyOrderListRequest) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *GetCopyOrderListRequest) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *GetCopyOrderListRequest) GetBizUserId() string {
	if x != nil {
		return x.BizUserId
	}
	return ""
}

func (x *GetCopyOrderListRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetCopyOrderListRequest) GetBizOrderId() string {
	if x != nil {
		return x.BizOrderId
	}
	return ""
}

func (x *GetCopyOrderListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCopyOrderListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetCopyOrderListReply struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Orders []*GetCopyOrderReply   `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"` // 订单列表
	// 分页信息
	Total         int64 `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`                       // 总记录数
	Page          int32 `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码
	PageSize      int32 `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 当前页大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCopyOrderListReply) Reset() {
	*x = GetCopyOrderListReply{}
	mi := &file_copy_v1_copy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCopyOrderListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCopyOrderListReply) ProtoMessage() {}

func (x *GetCopyOrderListReply) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCopyOrderListReply.ProtoReflect.Descriptor instead.
func (*GetCopyOrderListReply) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{8}
}

func (x *GetCopyOrderListReply) GetOrders() []*GetCopyOrderReply {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *GetCopyOrderListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetCopyOrderListReply) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCopyOrderListReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type CancelCopyOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelCopyOrderRequest) Reset() {
	*x = CancelCopyOrderRequest{}
	mi := &file_copy_v1_copy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelCopyOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCopyOrderRequest) ProtoMessage() {}

func (x *CancelCopyOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCopyOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelCopyOrderRequest) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{9}
}

func (x *CancelCopyOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CancelCopyOrderReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelCopyOrderReply) Reset() {
	*x = CancelCopyOrderReply{}
	mi := &file_copy_v1_copy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelCopyOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCopyOrderReply) ProtoMessage() {}

func (x *CancelCopyOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_copy_v1_copy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCopyOrderReply.ProtoReflect.Descriptor instead.
func (*CancelCopyOrderReply) Descriptor() ([]byte, []int) {
	return file_copy_v1_copy_proto_rawDescGZIP(), []int{10}
}

func (x *CancelCopyOrderReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

var File_copy_v1_copy_proto protoreflect.FileDescriptor

const file_copy_v1_copy_proto_rawDesc = "" +
	"\n" +
	"\x12copy/v1/copy.proto\x12\vapi.copy.v1\"\xbd\x01\n" +
	"\vBuyStrategy\x12\x1d\n" +
	"\n" +
	"min_amount\x18\x01 \x01(\tR\tminAmount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\x02 \x01(\tR\tmaxAmount\x12\x1a\n" +
	"\bstrategy\x18\x03 \x01(\rR\bstrategy\x12%\n" +
	"\x0estrategy_value\x18\x04 \x01(\tR\rstrategyValue\x12-\n" +
	"\x12slippage_tolerance\x18\x05 \x01(\x01R\x11slippageTolerance\"]\n" +
	"\fSellStrategy\x12\x1e\n" +
	"\n" +
	"percentage\x18\x01 \x01(\x01R\n" +
	"percentage\x12-\n" +
	"\x12slippage_tolerance\x18\x02 \x01(\x01R\x11slippageTolerance\"\xfe\x02\n" +
	"\x0eCopyConditions\x12'\n" +
	"\rmin_pool_size\x18\x01 \x01(\tH\x00R\vminPoolSize\x88\x01\x01\x12'\n" +
	"\rmax_pool_size\x18\x02 \x01(\tH\x01R\vmaxPoolSize\x88\x01\x01\x12)\n" +
	"\x0emin_buy_amount\x18\x03 \x01(\tH\x02R\fminBuyAmount\x88\x01\x01\x12)\n" +
	"\x0emax_buy_amount\x18\x04 \x01(\tH\x03R\fmaxBuyAmount\x88\x01\x01\x12)\n" +
	"\x0emin_market_cap\x18\x05 \x01(\tH\x04R\fminMarketCap\x88\x01\x01\x12)\n" +
	"\x0emax_market_cap\x18\x06 \x01(\tH\x05R\fmaxMarketCap\x88\x01\x01B\x10\n" +
	"\x0e_min_pool_sizeB\x10\n" +
	"\x0e_max_pool_sizeB\x11\n" +
	"\x0f_min_buy_amountB\x11\n" +
	"\x0f_max_buy_amountB\x11\n" +
	"\x0f_min_market_capB\x11\n" +
	"\x0f_max_market_cap\"\xbc\x04\n" +
	"\x16CreateCopyOrderRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12!\n" +
	"\fuser_address\x18\x02 \x01(\tR\vuserAddress\x12%\n" +
	"\x0etarget_address\x18\x03 \x01(\tR\rtargetAddress\x12\x1f\n" +
	"\vprivate_key\x18\x04 \x01(\tR\n" +
	"privateKey\x12 \n" +
	"\fbiz_order_id\x18\x05 \x01(\tR\n" +
	"bizOrderId\x12\x1e\n" +
	"\vbiz_user_id\x18\x06 \x01(\tR\tbizUserId\x125\n" +
	"\n" +
	"trade_type\x18\a \x01(\x0e2\x16.api.copy.v1.TradeTypeR\ttradeType\x12@\n" +
	"\fbuy_strategy\x18\b \x01(\v2\x18.api.copy.v1.BuyStrategyH\x00R\vbuyStrategy\x88\x01\x01\x12C\n" +
	"\rsell_strategy\x18\t \x01(\v2\x19.api.copy.v1.SellStrategyH\x01R\fsellStrategy\x88\x01\x01\x12I\n" +
	"\x0fcopy_conditions\x18\n" +
	" \x01(\v2\x1b.api.copy.v1.CopyConditionsH\x02R\x0ecopyConditions\x88\x01\x01\x12\x1f\n" +
	"\vexpire_time\x18\v \x01(\x03R\n" +
	"expireTimeB\x0f\n" +
	"\r_buy_strategyB\x10\n" +
	"\x0e_sell_strategyB\x12\n" +
	"\x10_copy_conditions\"1\n" +
	"\x14CreateCopyOrderReply\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"0\n" +
	"\x13GetCopyOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"\x81\x05\n" +
	"\x11GetCopyOrderReply\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x14\n" +
	"\x05chain\x18\x02 \x01(\tR\x05chain\x12!\n" +
	"\fuser_address\x18\x03 \x01(\tR\vuserAddress\x12%\n" +
	"\x0etarget_address\x18\x04 \x01(\tR\rtargetAddress\x12 \n" +
	"\fbiz_order_id\x18\x05 \x01(\tR\n" +
	"bizOrderId\x125\n" +
	"\n" +
	"trade_type\x18\x06 \x01(\x0e2\x16.api.copy.v1.TradeTypeR\ttradeType\x12@\n" +
	"\fbuy_strategy\x18\a \x01(\v2\x18.api.copy.v1.BuyStrategyH\x00R\vbuyStrategy\x88\x01\x01\x12C\n" +
	"\rsell_strategy\x18\b \x01(\v2\x19.api.copy.v1.SellStrategyH\x01R\fsellStrategy\x88\x01\x01\x12I\n" +
	"\x0fcopy_conditions\x18\t \x01(\v2\x1b.api.copy.v1.CopyConditionsH\x02R\x0ecopyConditions\x88\x01\x01\x12\x1f\n" +
	"\vexpire_time\x18\n" +
	" \x01(\x03R\n" +
	"expireTime\x12\x16\n" +
	"\x06status\x18\v \x01(\x04R\x06status\x12\x18\n" +
	"\amessage\x18\f \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"created_at\x18\r \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\tR\tupdatedAtB\x0f\n" +
	"\r_buy_strategyB\x10\n" +
	"\x0e_sell_strategyB\x12\n" +
	"\x10_copy_conditions\"\xec\x01\n" +
	"\x17GetCopyOrderListRequest\x12!\n" +
	"\fuser_address\x18\x01 \x01(\tR\vuserAddress\x12%\n" +
	"\x0etarget_address\x18\x02 \x01(\tR\rtargetAddress\x12\x1e\n" +
	"\vbiz_user_id\x18\x03 \x01(\tR\tbizUserId\x12\x14\n" +
	"\x05chain\x18\x04 \x01(\tR\x05chain\x12 \n" +
	"\fbiz_order_id\x18\x05 \x01(\tR\n" +
	"bizOrderId\x12\x12\n" +
	"\x04page\x18\x06 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\a \x01(\x05R\bpageSize\"\x96\x01\n" +
	"\x15GetCopyOrderListReply\x126\n" +
	"\x06orders\x18\x01 \x03(\v2\x1e.api.copy.v1.GetCopyOrderReplyR\x06orders\x12\x14\n" +
	"\x05total\x18\x06 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\a \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\b \x01(\x05R\bpageSize\"3\n" +
	"\x16CancelCopyOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"1\n" +
	"\x14CancelCopyOrderReply\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId*P\n" +
	"\tTradeType\x12\x1a\n" +
	"\x16TRADE_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eTRADE_TYPE_BUY\x10\x01\x12\x13\n" +
	"\x0fTRADE_TYPE_SELL\x10\x022\xf8\x02\n" +
	"\x10CopyTradeService\x12Y\n" +
	"\x0fCreateCopyOrder\x12#.api.copy.v1.CreateCopyOrderRequest\x1a!.api.copy.v1.CreateCopyOrderReply\x12P\n" +
	"\fGetCopyOrder\x12 .api.copy.v1.GetCopyOrderRequest\x1a\x1e.api.copy.v1.GetCopyOrderReply\x12\\\n" +
	"\x10GetCopyOrderList\x12$.api.copy.v1.GetCopyOrderListRequest\x1a\".api.copy.v1.GetCopyOrderListReply\x12Y\n" +
	"\x0fCancelCopyOrder\x12#.api.copy.v1.CancelCopyOrderRequest\x1a!.api.copy.v1.CancelCopyOrderReplyB%\n" +
	"\vapi.copy.v1P\x01Z\x14block/api/copy/v1;v1b\x06proto3"

var (
	file_copy_v1_copy_proto_rawDescOnce sync.Once
	file_copy_v1_copy_proto_rawDescData []byte
)

func file_copy_v1_copy_proto_rawDescGZIP() []byte {
	file_copy_v1_copy_proto_rawDescOnce.Do(func() {
		file_copy_v1_copy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_copy_v1_copy_proto_rawDesc), len(file_copy_v1_copy_proto_rawDesc)))
	})
	return file_copy_v1_copy_proto_rawDescData
}

var file_copy_v1_copy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_copy_v1_copy_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_copy_v1_copy_proto_goTypes = []any{
	(TradeType)(0),                  // 0: api.copy.v1.TradeType
	(*BuyStrategy)(nil),             // 1: api.copy.v1.BuyStrategy
	(*SellStrategy)(nil),            // 2: api.copy.v1.SellStrategy
	(*CopyConditions)(nil),          // 3: api.copy.v1.CopyConditions
	(*CreateCopyOrderRequest)(nil),  // 4: api.copy.v1.CreateCopyOrderRequest
	(*CreateCopyOrderReply)(nil),    // 5: api.copy.v1.CreateCopyOrderReply
	(*GetCopyOrderRequest)(nil),     // 6: api.copy.v1.GetCopyOrderRequest
	(*GetCopyOrderReply)(nil),       // 7: api.copy.v1.GetCopyOrderReply
	(*GetCopyOrderListRequest)(nil), // 8: api.copy.v1.GetCopyOrderListRequest
	(*GetCopyOrderListReply)(nil),   // 9: api.copy.v1.GetCopyOrderListReply
	(*CancelCopyOrderRequest)(nil),  // 10: api.copy.v1.CancelCopyOrderRequest
	(*CancelCopyOrderReply)(nil),    // 11: api.copy.v1.CancelCopyOrderReply
}
var file_copy_v1_copy_proto_depIdxs = []int32{
	0,  // 0: api.copy.v1.CreateCopyOrderRequest.trade_type:type_name -> api.copy.v1.TradeType
	1,  // 1: api.copy.v1.CreateCopyOrderRequest.buy_strategy:type_name -> api.copy.v1.BuyStrategy
	2,  // 2: api.copy.v1.CreateCopyOrderRequest.sell_strategy:type_name -> api.copy.v1.SellStrategy
	3,  // 3: api.copy.v1.CreateCopyOrderRequest.copy_conditions:type_name -> api.copy.v1.CopyConditions
	0,  // 4: api.copy.v1.GetCopyOrderReply.trade_type:type_name -> api.copy.v1.TradeType
	1,  // 5: api.copy.v1.GetCopyOrderReply.buy_strategy:type_name -> api.copy.v1.BuyStrategy
	2,  // 6: api.copy.v1.GetCopyOrderReply.sell_strategy:type_name -> api.copy.v1.SellStrategy
	3,  // 7: api.copy.v1.GetCopyOrderReply.copy_conditions:type_name -> api.copy.v1.CopyConditions
	7,  // 8: api.copy.v1.GetCopyOrderListReply.orders:type_name -> api.copy.v1.GetCopyOrderReply
	4,  // 9: api.copy.v1.CopyTradeService.CreateCopyOrder:input_type -> api.copy.v1.CreateCopyOrderRequest
	6,  // 10: api.copy.v1.CopyTradeService.GetCopyOrder:input_type -> api.copy.v1.GetCopyOrderRequest
	8,  // 11: api.copy.v1.CopyTradeService.GetCopyOrderList:input_type -> api.copy.v1.GetCopyOrderListRequest
	10, // 12: api.copy.v1.CopyTradeService.CancelCopyOrder:input_type -> api.copy.v1.CancelCopyOrderRequest
	5,  // 13: api.copy.v1.CopyTradeService.CreateCopyOrder:output_type -> api.copy.v1.CreateCopyOrderReply
	7,  // 14: api.copy.v1.CopyTradeService.GetCopyOrder:output_type -> api.copy.v1.GetCopyOrderReply
	9,  // 15: api.copy.v1.CopyTradeService.GetCopyOrderList:output_type -> api.copy.v1.GetCopyOrderListReply
	11, // 16: api.copy.v1.CopyTradeService.CancelCopyOrder:output_type -> api.copy.v1.CancelCopyOrderReply
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_copy_v1_copy_proto_init() }
func file_copy_v1_copy_proto_init() {
	if File_copy_v1_copy_proto != nil {
		return
	}
	file_copy_v1_copy_proto_msgTypes[2].OneofWrappers = []any{}
	file_copy_v1_copy_proto_msgTypes[3].OneofWrappers = []any{}
	file_copy_v1_copy_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_copy_v1_copy_proto_rawDesc), len(file_copy_v1_copy_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_copy_v1_copy_proto_goTypes,
		DependencyIndexes: file_copy_v1_copy_proto_depIdxs,
		EnumInfos:         file_copy_v1_copy_proto_enumTypes,
		MessageInfos:      file_copy_v1_copy_proto_msgTypes,
	}.Build()
	File_copy_v1_copy_proto = out.File
	file_copy_v1_copy_proto_goTypes = nil
	file_copy_v1_copy_proto_depIdxs = nil
}
